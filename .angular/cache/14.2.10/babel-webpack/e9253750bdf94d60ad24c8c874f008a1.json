{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { Injectable, InjectionToken, Inject, isDevMode, NgModule, Optional, SkipSelf, Injector } from '@angular/core';\nimport { BehaviorSubject, Observable, Subject, queueScheduler } from 'rxjs';\nimport { observeOn, withLatestFrom, scan, pluck, map, distinctUntilChanged } from 'rxjs/operators';\nconst REGISTERED_ACTION_TYPES = {};\nfunction resetRegisteredActionTypes() {\n  for (const key of Object.keys(REGISTERED_ACTION_TYPES)) {\n    delete REGISTERED_ACTION_TYPES[key];\n  }\n}\n\n/**\n * @description\n * Creates a configured `Creator` function that, when called, returns an object in the shape of the `Action` interface.\n *\n * Action creators reduce the explicitness of class-based action creators.\n *\n * @param type Describes the action that will be dispatched\n * @param config Additional metadata needed for the handling of the action.  See {@link createAction#usage-notes Usage Notes}.\n *\n * @usageNotes\n *\n * **Declaring an action creator**\n *\n * Without additional metadata:\n * ```ts\n * export const increment = createAction('[Counter] Increment');\n * ```\n * With additional metadata:\n * ```ts\n * export const loginSuccess = createAction(\n *   '[Auth/API] Login Success',\n *   props<{ user: User }>()\n * );\n * ```\n * With a function:\n * ```ts\n * export const loginSuccess = createAction(\n *   '[Auth/API] Login Success',\n *   (response: Response) => response.user\n * );\n * ```\n *\n * **Dispatching an action**\n *\n * Without additional metadata:\n * ```ts\n * store.dispatch(increment());\n * ```\n * With additional metadata:\n * ```ts\n * store.dispatch(loginSuccess({ user: newUser }));\n * ```\n *\n * **Referencing an action in a reducer**\n *\n * Using a switch statement:\n * ```ts\n * switch (action.type) {\n *   // ...\n *   case AuthApiActions.loginSuccess.type: {\n *     return {\n *       ...state,\n *       user: action.user\n *     };\n *   }\n * }\n * ```\n * Using a reducer creator:\n * ```ts\n * on(AuthApiActions.loginSuccess, (state, { user }) => ({ ...state, user }))\n * ```\n *\n *  **Referencing an action in an effect**\n * ```ts\n * effectName$ = createEffect(\n *   () => this.actions$.pipe(\n *     ofType(AuthApiActions.loginSuccess),\n *     // ...\n *   )\n * );\n * ```\n */\nfunction createAction(type, config) {\n  REGISTERED_ACTION_TYPES[type] = (REGISTERED_ACTION_TYPES[type] || 0) + 1;\n  if (typeof config === 'function') {\n    return defineType(type, (...args) => Object.assign(Object.assign({}, config(...args)), {\n      type\n    }));\n  }\n  const as = config ? config._as : 'empty';\n  switch (as) {\n    case 'empty':\n      return defineType(type, () => ({\n        type\n      }));\n    case 'props':\n      return defineType(type, props => Object.assign(Object.assign({}, props), {\n        type\n      }));\n    default:\n      throw new Error('Unexpected config.');\n  }\n}\nfunction props() {\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion, @typescript-eslint/naming-convention\n  return {\n    _as: 'props',\n    _p: undefined\n  };\n}\nfunction union(creators) {\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  return undefined;\n}\nfunction defineType(type, creator) {\n  return Object.defineProperty(creator, 'type', {\n    value: type,\n    writable: false\n  });\n}\nfunction capitalize(text) {\n  return text.charAt(0).toUpperCase() + text.substr(1);\n}\n\n/**\n * @description\n * A function that creates a group of action creators with the same source.\n *\n * @param config An object that contains a source and dictionary of events.\n * An event is a key-value pair of an event name and event props.\n * @returns A dictionary of action creators.\n * The name of each action creator is created by camel casing the event name.\n * The type of each action is created using the \"[Source] Event Name\" pattern.\n *\n * @usageNotes\n *\n * ```ts\n * const authApiActions = createActionGroup({\n *   source: 'Auth API',\n *   events: {\n *     // defining events with payload using the `props` function\n *     'Login Success': props<{ userId: number; token: string }>(),\n *     'Login Failure': props<{ error: string }>(),\n *\n *     // defining an event without payload using the `emptyProps` function\n *     'Logout Success': emptyProps(),\n *\n *     // defining an event with payload using the props factory\n *     'Logout Failure': (error: Error) => ({ error }),\n *   },\n * });\n *\n * // action type: \"[Auth API] Login Success\"\n * authApiActions.loginSuccess({ userId: 10, token: 'ngrx' });\n *\n * // action type: \"[Auth API] Login Failure\"\n * authApiActions.loginFailure({ error: 'Login Failure!' });\n *\n * // action type: \"[Auth API] Logout Success\"\n * authApiActions.logoutSuccess();\n *\n * // action type: \"[Auth API] Logout Failure\";\n * authApiActions.logoutFailure(new Error('Logout Failure!'));\n * ```\n */\nfunction createActionGroup(config) {\n  const {\n    source,\n    events\n  } = config;\n  return Object.keys(events).reduce((actionGroup, eventName) => Object.assign(Object.assign({}, actionGroup), {\n    [toActionName(eventName)]: createAction(toActionType(source, eventName), events[eventName])\n  }), {});\n}\nfunction emptyProps() {\n  return props();\n}\nfunction toActionName(eventName) {\n  return eventName.trim().toLowerCase().split(' ').map((word, i) => i === 0 ? word : capitalize(word)).join('');\n}\nfunction toActionType(source, eventName) {\n  return `[${source}] ${eventName}`;\n}\nconst INIT = '@ngrx/store/init';\nclass ActionsSubject extends BehaviorSubject {\n  constructor() {\n    super({\n      type: INIT\n    });\n  }\n  next(action) {\n    if (typeof action === 'function') {\n      throw new TypeError(`\n        Dispatch expected an object, instead it received a function.\n        If you're using the createAction function, make sure to invoke the function\n        before dispatching the action. For example, someAction should be someAction().`);\n    } else if (typeof action === 'undefined') {\n      throw new TypeError(`Actions must be objects`);\n    } else if (typeof action.type === 'undefined') {\n      throw new TypeError(`Actions must have a type property`);\n    }\n    super.next(action);\n  }\n  complete() {\n    /* noop */\n  }\n  ngOnDestroy() {\n    super.complete();\n  }\n}\n/** @nocollapse */ /** @nocollapse */\nActionsSubject.ɵfac = function ActionsSubject_Factory(t) {\n  return new (t || ActionsSubject)();\n};\n/** @nocollapse */ /** @nocollapse */\nActionsSubject.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: ActionsSubject,\n  factory: ActionsSubject.ɵfac\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ActionsSubject, [{\n    type: Injectable\n  }], function () {\n    return [];\n  }, null);\n})();\nconst ACTIONS_SUBJECT_PROVIDERS = [ActionsSubject];\nconst _ROOT_STORE_GUARD = new InjectionToken('@ngrx/store Internal Root Guard');\nconst _INITIAL_STATE = new InjectionToken('@ngrx/store Internal Initial State');\nconst INITIAL_STATE = new InjectionToken('@ngrx/store Initial State');\nconst REDUCER_FACTORY = new InjectionToken('@ngrx/store Reducer Factory');\nconst _REDUCER_FACTORY = new InjectionToken('@ngrx/store Internal Reducer Factory Provider');\nconst INITIAL_REDUCERS = new InjectionToken('@ngrx/store Initial Reducers');\nconst _INITIAL_REDUCERS = new InjectionToken('@ngrx/store Internal Initial Reducers');\nconst STORE_FEATURES = new InjectionToken('@ngrx/store Store Features');\nconst _STORE_REDUCERS = new InjectionToken('@ngrx/store Internal Store Reducers');\nconst _FEATURE_REDUCERS = new InjectionToken('@ngrx/store Internal Feature Reducers');\nconst _FEATURE_CONFIGS = new InjectionToken('@ngrx/store Internal Feature Configs');\nconst _STORE_FEATURES = new InjectionToken('@ngrx/store Internal Store Features');\nconst _FEATURE_REDUCERS_TOKEN = new InjectionToken('@ngrx/store Internal Feature Reducers Token');\nconst FEATURE_REDUCERS = new InjectionToken('@ngrx/store Feature Reducers');\n/**\n * User-defined meta reducers from StoreModule.forRoot()\n */\nconst USER_PROVIDED_META_REDUCERS = new InjectionToken('@ngrx/store User Provided Meta Reducers');\n/**\n * Meta reducers defined either internally by @ngrx/store or by library authors\n */\nconst META_REDUCERS = new InjectionToken('@ngrx/store Meta Reducers');\n/**\n * Concats the user provided meta reducers and the meta reducers provided on the multi\n * injection token\n */\nconst _RESOLVED_META_REDUCERS = new InjectionToken('@ngrx/store Internal Resolved Meta Reducers');\n/**\n * Runtime checks defined by the user via an InjectionToken\n * Defaults to `_USER_RUNTIME_CHECKS`\n */\nconst USER_RUNTIME_CHECKS = new InjectionToken('@ngrx/store User Runtime Checks Config');\n/**\n * Runtime checks defined by the user via forRoot()\n */\nconst _USER_RUNTIME_CHECKS = new InjectionToken('@ngrx/store Internal User Runtime Checks Config');\n/**\n * Runtime checks currently in use\n */\nconst ACTIVE_RUNTIME_CHECKS = new InjectionToken('@ngrx/store Internal Runtime Checks');\nconst _ACTION_TYPE_UNIQUENESS_CHECK = new InjectionToken('@ngrx/store Check if Action types are unique');\n\n/**\n * @description\n * Combines reducers for individual features into a single reducer.\n *\n * You can use this function to delegate handling of state transitions to multiple reducers, each acting on their\n * own sub-state within the root state.\n *\n * @param reducers An object mapping keys of the root state to their corresponding feature reducer.\n * @param initialState Provides a state value if the current state is `undefined`, as it is initially.\n * @returns A reducer function.\n *\n * @usageNotes\n *\n * **Example combining two feature reducers into one \"root\" reducer**\n *\n * ```ts\n * export const reducer = combineReducers({\n *   featureA: featureAReducer,\n *   featureB: featureBReducer\n * });\n * ```\n *\n * You can also override the initial states of the sub-features:\n * ```ts\n * export const reducer = combineReducers({\n *   featureA: featureAReducer,\n *   featureB: featureBReducer\n * }, {\n *   featureA: { counterA: 13 },\n *   featureB: { counterB: 37 }\n * });\n * ```\n */\nfunction combineReducers(reducers, initialState = {}) {\n  const reducerKeys = Object.keys(reducers);\n  const finalReducers = {};\n  for (let i = 0; i < reducerKeys.length; i++) {\n    const key = reducerKeys[i];\n    if (typeof reducers[key] === 'function') {\n      finalReducers[key] = reducers[key];\n    }\n  }\n  const finalReducerKeys = Object.keys(finalReducers);\n  return function combination(state, action) {\n    state = state === undefined ? initialState : state;\n    let hasChanged = false;\n    const nextState = {};\n    for (let i = 0; i < finalReducerKeys.length; i++) {\n      const key = finalReducerKeys[i];\n      const reducer = finalReducers[key];\n      const previousStateForKey = state[key];\n      const nextStateForKey = reducer(previousStateForKey, action);\n      nextState[key] = nextStateForKey;\n      hasChanged = hasChanged || nextStateForKey !== previousStateForKey;\n    }\n    return hasChanged ? nextState : state;\n  };\n}\nfunction omit(object, keyToRemove) {\n  return Object.keys(object).filter(key => key !== keyToRemove).reduce((result, key) => Object.assign(result, {\n    [key]: object[key]\n  }), {});\n}\nfunction compose(...functions) {\n  return function (arg) {\n    if (functions.length === 0) {\n      return arg;\n    }\n    const last = functions[functions.length - 1];\n    const rest = functions.slice(0, -1);\n    return rest.reduceRight((composed, fn) => fn(composed), last(arg));\n  };\n}\nfunction createReducerFactory(reducerFactory, metaReducers) {\n  if (Array.isArray(metaReducers) && metaReducers.length > 0) {\n    reducerFactory = compose.apply(null, [...metaReducers, reducerFactory]);\n  }\n  return (reducers, initialState) => {\n    const reducer = reducerFactory(reducers);\n    return (state, action) => {\n      state = state === undefined ? initialState : state;\n      return reducer(state, action);\n    };\n  };\n}\nfunction createFeatureReducerFactory(metaReducers) {\n  const reducerFactory = Array.isArray(metaReducers) && metaReducers.length > 0 ? compose(...metaReducers) : r => r;\n  return (reducer, initialState) => {\n    reducer = reducerFactory(reducer);\n    return (state, action) => {\n      state = state === undefined ? initialState : state;\n      return reducer(state, action);\n    };\n  };\n}\nclass ReducerObservable extends Observable {}\nclass ReducerManagerDispatcher extends ActionsSubject {}\nconst UPDATE = '@ngrx/store/update-reducers';\nclass ReducerManager extends BehaviorSubject {\n  constructor(dispatcher, initialState, reducers, reducerFactory) {\n    super(reducerFactory(reducers, initialState));\n    this.dispatcher = dispatcher;\n    this.initialState = initialState;\n    this.reducers = reducers;\n    this.reducerFactory = reducerFactory;\n  }\n  get currentReducers() {\n    return this.reducers;\n  }\n  addFeature(feature) {\n    this.addFeatures([feature]);\n  }\n  addFeatures(features) {\n    const reducers = features.reduce((reducerDict, {\n      reducers,\n      reducerFactory,\n      metaReducers,\n      initialState,\n      key\n    }) => {\n      const reducer = typeof reducers === 'function' ? createFeatureReducerFactory(metaReducers)(reducers, initialState) : createReducerFactory(reducerFactory, metaReducers)(reducers, initialState);\n      reducerDict[key] = reducer;\n      return reducerDict;\n    }, {});\n    this.addReducers(reducers);\n  }\n  removeFeature(feature) {\n    this.removeFeatures([feature]);\n  }\n  removeFeatures(features) {\n    this.removeReducers(features.map(p => p.key));\n  }\n  addReducer(key, reducer) {\n    this.addReducers({\n      [key]: reducer\n    });\n  }\n  addReducers(reducers) {\n    this.reducers = Object.assign(Object.assign({}, this.reducers), reducers);\n    this.updateReducers(Object.keys(reducers));\n  }\n  removeReducer(featureKey) {\n    this.removeReducers([featureKey]);\n  }\n  removeReducers(featureKeys) {\n    featureKeys.forEach(key => {\n      this.reducers = omit(this.reducers, key) /*TODO(#823)*/;\n    });\n\n    this.updateReducers(featureKeys);\n  }\n  updateReducers(featureKeys) {\n    this.next(this.reducerFactory(this.reducers, this.initialState));\n    this.dispatcher.next({\n      type: UPDATE,\n      features: featureKeys\n    });\n  }\n  ngOnDestroy() {\n    this.complete();\n  }\n}\n/** @nocollapse */ /** @nocollapse */\nReducerManager.ɵfac = function ReducerManager_Factory(t) {\n  return new (t || ReducerManager)(i0.ɵɵinject(ReducerManagerDispatcher), i0.ɵɵinject(INITIAL_STATE), i0.ɵɵinject(INITIAL_REDUCERS), i0.ɵɵinject(REDUCER_FACTORY));\n};\n/** @nocollapse */ /** @nocollapse */\nReducerManager.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: ReducerManager,\n  factory: ReducerManager.ɵfac\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ReducerManager, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: ReducerManagerDispatcher\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [INITIAL_STATE]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [INITIAL_REDUCERS]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [REDUCER_FACTORY]\n      }]\n    }];\n  }, null);\n})();\nconst REDUCER_MANAGER_PROVIDERS = [ReducerManager, {\n  provide: ReducerObservable,\n  useExisting: ReducerManager\n}, {\n  provide: ReducerManagerDispatcher,\n  useExisting: ActionsSubject\n}];\nclass ScannedActionsSubject extends Subject {\n  ngOnDestroy() {\n    this.complete();\n  }\n}\n/** @nocollapse */ /** @nocollapse */\nScannedActionsSubject.ɵfac = /* @__PURE__ */function () {\n  let ɵScannedActionsSubject_BaseFactory;\n  return function ScannedActionsSubject_Factory(t) {\n    return (ɵScannedActionsSubject_BaseFactory || (ɵScannedActionsSubject_BaseFactory = i0.ɵɵgetInheritedFactory(ScannedActionsSubject)))(t || ScannedActionsSubject);\n  };\n}();\n/** @nocollapse */ /** @nocollapse */\nScannedActionsSubject.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: ScannedActionsSubject,\n  factory: ScannedActionsSubject.ɵfac\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ScannedActionsSubject, [{\n    type: Injectable\n  }], null, null);\n})();\nconst SCANNED_ACTIONS_SUBJECT_PROVIDERS = [ScannedActionsSubject];\nclass StateObservable extends Observable {}\nclass State extends BehaviorSubject {\n  constructor(actions$, reducer$, scannedActions, initialState) {\n    super(initialState);\n    const actionsOnQueue$ = actions$.pipe(observeOn(queueScheduler));\n    const withLatestReducer$ = actionsOnQueue$.pipe(withLatestFrom(reducer$));\n    const seed = {\n      state: initialState\n    };\n    const stateAndAction$ = withLatestReducer$.pipe(scan(reduceState, seed));\n    this.stateSubscription = stateAndAction$.subscribe(({\n      state,\n      action\n    }) => {\n      this.next(state);\n      scannedActions.next(action);\n    });\n  }\n  ngOnDestroy() {\n    this.stateSubscription.unsubscribe();\n    this.complete();\n  }\n}\nState.INIT = INIT;\n/** @nocollapse */ /** @nocollapse */\nState.ɵfac = function State_Factory(t) {\n  return new (t || State)(i0.ɵɵinject(ActionsSubject), i0.ɵɵinject(ReducerObservable), i0.ɵɵinject(ScannedActionsSubject), i0.ɵɵinject(INITIAL_STATE));\n};\n/** @nocollapse */ /** @nocollapse */\nState.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: State,\n  factory: State.ɵfac\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(State, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: ActionsSubject\n    }, {\n      type: ReducerObservable\n    }, {\n      type: ScannedActionsSubject\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [INITIAL_STATE]\n      }]\n    }];\n  }, null);\n})();\nfunction reduceState(stateActionPair = {\n  state: undefined\n}, [action, reducer]) {\n  const {\n    state\n  } = stateActionPair;\n  return {\n    state: reducer(state, action),\n    action\n  };\n}\nconst STATE_PROVIDERS = [State, {\n  provide: StateObservable,\n  useExisting: State\n}];\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass Store extends Observable {\n  constructor(state$, actionsObserver, reducerManager) {\n    super();\n    this.actionsObserver = actionsObserver;\n    this.reducerManager = reducerManager;\n    this.source = state$;\n  }\n  select(pathOrMapFn, ...paths) {\n    return select.call(null, pathOrMapFn, ...paths)(this);\n  }\n  lift(operator) {\n    const store = new Store(this, this.actionsObserver, this.reducerManager);\n    store.operator = operator;\n    return store;\n  }\n  dispatch(action) {\n    this.actionsObserver.next(action);\n  }\n  next(action) {\n    this.actionsObserver.next(action);\n  }\n  error(err) {\n    this.actionsObserver.error(err);\n  }\n  complete() {\n    this.actionsObserver.complete();\n  }\n  addReducer(key, reducer) {\n    this.reducerManager.addReducer(key, reducer);\n  }\n  removeReducer(key) {\n    this.reducerManager.removeReducer(key);\n  }\n}\n/** @nocollapse */ /** @nocollapse */\nStore.ɵfac = function Store_Factory(t) {\n  return new (t || Store)(i0.ɵɵinject(StateObservable), i0.ɵɵinject(ActionsSubject), i0.ɵɵinject(ReducerManager));\n};\n/** @nocollapse */ /** @nocollapse */\nStore.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: Store,\n  factory: Store.ɵfac\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(Store, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: StateObservable\n    }, {\n      type: ActionsSubject\n    }, {\n      type: ReducerManager\n    }];\n  }, null);\n})();\nconst STORE_PROVIDERS = [Store];\nfunction select(pathOrMapFn, propsOrPath, ...paths) {\n  return function selectOperator(source$) {\n    let mapped$;\n    if (typeof pathOrMapFn === 'string') {\n      const pathSlices = [propsOrPath, ...paths].filter(Boolean);\n      mapped$ = source$.pipe(pluck(pathOrMapFn, ...pathSlices));\n    } else if (typeof pathOrMapFn === 'function') {\n      mapped$ = source$.pipe(map(source => pathOrMapFn(source, propsOrPath)));\n    } else {\n      throw new TypeError(`Unexpected type '${typeof pathOrMapFn}' in select operator,` + ` expected 'string' or 'function'`);\n    }\n    return mapped$.pipe(distinctUntilChanged());\n  };\n}\nconst RUNTIME_CHECK_URL = 'https://ngrx.io/guide/store/configuration/runtime-checks';\nfunction isUndefined(target) {\n  return target === undefined;\n}\nfunction isNull(target) {\n  return target === null;\n}\nfunction isArray(target) {\n  return Array.isArray(target);\n}\nfunction isString(target) {\n  return typeof target === 'string';\n}\nfunction isBoolean(target) {\n  return typeof target === 'boolean';\n}\nfunction isNumber(target) {\n  return typeof target === 'number';\n}\nfunction isObjectLike(target) {\n  return typeof target === 'object' && target !== null;\n}\nfunction isObject(target) {\n  return isObjectLike(target) && !isArray(target);\n}\nfunction isPlainObject(target) {\n  if (!isObject(target)) {\n    return false;\n  }\n  const targetPrototype = Object.getPrototypeOf(target);\n  return targetPrototype === Object.prototype || targetPrototype === null;\n}\nfunction isFunction(target) {\n  return typeof target === 'function';\n}\nfunction isComponent(target) {\n  return isFunction(target) && target.hasOwnProperty('ɵcmp');\n}\nfunction hasOwnProperty(target, propertyName) {\n  return Object.prototype.hasOwnProperty.call(target, propertyName);\n}\nlet _ngrxMockEnvironment = false;\nfunction setNgrxMockEnvironment(value) {\n  _ngrxMockEnvironment = value;\n}\nfunction isNgrxMockEnvironment() {\n  return _ngrxMockEnvironment;\n}\nfunction isEqualCheck(a, b) {\n  return a === b;\n}\nfunction isArgumentsChanged(args, lastArguments, comparator) {\n  for (let i = 0; i < args.length; i++) {\n    if (!comparator(args[i], lastArguments[i])) {\n      return true;\n    }\n  }\n  return false;\n}\nfunction resultMemoize(projectionFn, isResultEqual) {\n  return defaultMemoize(projectionFn, isEqualCheck, isResultEqual);\n}\nfunction defaultMemoize(projectionFn, isArgumentsEqual = isEqualCheck, isResultEqual = isEqualCheck) {\n  let lastArguments = null;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any, , , , ,\n  let lastResult = null;\n  let overrideResult;\n  function reset() {\n    lastArguments = null;\n    lastResult = null;\n  }\n  function setResult(result = undefined) {\n    overrideResult = {\n      result\n    };\n  }\n  function clearResult() {\n    overrideResult = undefined;\n  }\n  /* eslint-disable prefer-rest-params, prefer-spread */\n  // disabled because of the use of `arguments`\n  function memoized() {\n    if (overrideResult !== undefined) {\n      return overrideResult.result;\n    }\n    if (!lastArguments) {\n      lastResult = projectionFn.apply(null, arguments);\n      lastArguments = arguments;\n      return lastResult;\n    }\n    if (!isArgumentsChanged(arguments, lastArguments, isArgumentsEqual)) {\n      return lastResult;\n    }\n    const newResult = projectionFn.apply(null, arguments);\n    lastArguments = arguments;\n    if (isResultEqual(lastResult, newResult)) {\n      return lastResult;\n    }\n    lastResult = newResult;\n    return newResult;\n  }\n  return {\n    memoized,\n    reset,\n    setResult,\n    clearResult\n  };\n}\nfunction createSelector(...input) {\n  return createSelectorFactory(defaultMemoize)(...input);\n}\nfunction defaultStateFn(state, selectors, props, memoizedProjector) {\n  if (props === undefined) {\n    const args = selectors.map(fn => fn(state));\n    return memoizedProjector.memoized.apply(null, args);\n  }\n  const args = selectors.map(fn => fn(state, props));\n  return memoizedProjector.memoized.apply(null, [...args, props]);\n}\n/**\n *\n * @param memoize The function used to memoize selectors\n * @param options Config Object that may include a `stateFn` function defining how to return the selector's value, given the entire `Store`'s state, parent `Selector`s, `Props`, and a `MemoizedProjection`\n *\n * @usageNotes\n *\n * **Creating a Selector Factory Where Array Order Does Not Matter**\n *\n * ```ts\n * function removeMatch(arr: string[], target: string): string[] {\n *   const matchIndex = arr.indexOf(target);\n *   return [...arr.slice(0, matchIndex), ...arr.slice(matchIndex + 1)];\n * }\n *\n * function orderDoesNotMatterComparer(a: any, b: any): boolean {\n *   if (!Array.isArray(a) || !Array.isArray(b)) {\n *     return a === b;\n *   }\n *   if (a.length !== b.length) {\n *     return false;\n *   }\n *   let tempB = [...b];\n *   function reduceToDetermineIfArraysContainSameContents(\n *     previousCallResult: boolean,\n *     arrayMember: any\n *   ): boolean {\n *     if (previousCallResult === false) {\n *       return false;\n *     }\n *     if (tempB.includes(arrayMember)) {\n *       tempB = removeMatch(tempB, arrayMember);\n *       return true;\n *     }\n *     return false;\n *   }\n *   return a.reduce(reduceToDetermineIfArraysContainSameContents, true);\n * }\n *\n * export const creactOrderDoesNotMatterSelector = createSelectorFactory(\n *   (projectionFun) => defaultMemoize(\n *     projectionFun,\n *     orderDoesNotMatterComparer,\n *     orderDoesNotMatterComparer\n *   )\n * );\n * ```\n *\n * **Creating an Alternative Memoization Strategy**\n *\n * ```ts\n * function serialize(x: any): string {\n *   return JSON.stringify(x);\n * }\n *\n * export const createFullHistorySelector = createSelectorFactory(\n *  (projectionFunction) => {\n *    const cache = {};\n *\n *    function memoized() {\n *      const serializedArguments = serialize(...arguments);\n *       if (cache[serializedArguments] != null) {\n *         cache[serializedArguments] = projectionFunction.apply(null, arguments);\n *       }\n *       return cache[serializedArguments];\n *     }\n *     return {\n *       memoized,\n *       reset: () => {},\n *       setResult: () => {},\n *       clearResult: () => {},\n *     };\n *   }\n * );\n * ```\n *\n *\n */\nfunction createSelectorFactory(memoize, options = {\n  stateFn: defaultStateFn\n}) {\n  return function (...input) {\n    let args = input;\n    if (Array.isArray(args[0])) {\n      const [head, ...tail] = args;\n      args = [...head, ...tail];\n    }\n    const selectors = args.slice(0, args.length - 1);\n    const projector = args[args.length - 1];\n    const memoizedSelectors = selectors.filter(selector => selector.release && typeof selector.release === 'function');\n    const memoizedProjector = memoize(function (...selectors) {\n      return projector.apply(null, selectors);\n    });\n    const memoizedState = defaultMemoize(function (state, props) {\n      return options.stateFn.apply(null, [state, selectors, props, memoizedProjector]);\n    });\n    function release() {\n      memoizedState.reset();\n      memoizedProjector.reset();\n      memoizedSelectors.forEach(selector => selector.release());\n    }\n    return Object.assign(memoizedState.memoized, {\n      release,\n      projector: memoizedProjector.memoized,\n      setResult: memoizedState.setResult,\n      clearResult: memoizedState.clearResult\n    });\n  };\n}\nfunction createFeatureSelector(featureName) {\n  return createSelector(state => {\n    const featureState = state[featureName];\n    if (!isNgrxMockEnvironment() && isDevMode() && !(featureName in state)) {\n      console.warn(`@ngrx/store: The feature name \"${featureName}\" does ` + 'not exist in the state, therefore createFeatureSelector ' + 'cannot access it.  Be sure it is imported in a loaded module ' + `using StoreModule.forRoot('${featureName}', ...) or ` + `StoreModule.forFeature('${featureName}', ...).  If the default ` + 'state is intended to be undefined, as is the case with router ' + 'state, this development-only warning message can be ignored.');\n    }\n    return featureState;\n  }, featureState => featureState);\n}\n\n/**\n * @description\n * A function that accepts a feature name and a feature reducer, and creates\n * a feature selector and a selector for each feature state property.\n *\n * @param featureConfig An object that contains a feature name and a feature reducer.\n * @returns An object that contains a feature name, a feature reducer,\n * a feature selector, and a selector for each feature state property.\n *\n * @usageNotes\n *\n * **With Application State**\n *\n * ```ts\n * interface AppState {\n *   products: ProductsState;\n * }\n *\n * interface ProductsState {\n *   products: Product[];\n *   selectedId: string | null;\n * }\n *\n * const initialState: ProductsState = {\n *   products: [],\n *   selectedId: null,\n * };\n *\n * // AppState is passed as a generic argument\n * const productsFeature = createFeature<AppState>({\n *   name: 'products',\n *   reducer: createReducer(\n *     initialState,\n *     on(ProductsApiActions.loadSuccess(state, { products }) => ({\n *       ...state,\n *       products,\n *     }),\n *   ),\n * });\n *\n * const {\n *   selectProductsState, // type: MemoizedSelector<AppState, ProductsState>\n *   selectProducts, // type: MemoizedSelector<AppState, Product[]>\n *   selectSelectedId, // type: MemoizedSelector<AppState, string | null>\n * } = productsFeature;\n * ```\n *\n * **Without Application State**\n *\n * ```ts\n * const productsFeature = createFeature({\n *   name: 'products',\n *   reducer: createReducer(initialState),\n * });\n *\n * const {\n *   selectProductsState, // type: MemoizedSelector<Record<string, any>, ProductsState>\n *   selectProducts, // type: MemoizedSelector<Record<string, any>, Product[]>\n *   selectSelectedId, // type: MemoizedSelector<Record<string, any, string | null>\n * } = productsFeature;\n * ```\n */\nfunction createFeature(featureConfig) {\n  const {\n    name,\n    reducer\n  } = featureConfig;\n  const featureSelector = createFeatureSelector(name);\n  const nestedSelectors = createNestedSelectors(featureSelector, reducer);\n  return Object.assign({\n    name,\n    reducer,\n    [`select${capitalize(name)}State`]: featureSelector\n  }, nestedSelectors);\n}\nfunction createNestedSelectors(featureSelector, reducer) {\n  const initialState = getInitialState(reducer);\n  const nestedKeys = isPlainObject(initialState) ? Object.keys(initialState) : [];\n  return nestedKeys.reduce((nestedSelectors, nestedKey) => Object.assign(Object.assign({}, nestedSelectors), {\n    [`select${capitalize(nestedKey)}`]: createSelector(featureSelector, parentState => parentState === null || parentState === void 0 ? void 0 : parentState[nestedKey])\n  }), {});\n}\nfunction getInitialState(reducer) {\n  return reducer(undefined, {\n    type: '@ngrx/feature/init'\n  });\n}\nfunction immutabilityCheckMetaReducer(reducer, checks) {\n  return function (state, action) {\n    const act = checks.action(action) ? freeze(action) : action;\n    const nextState = reducer(state, act);\n    return checks.state() ? freeze(nextState) : nextState;\n  };\n}\nfunction freeze(target) {\n  Object.freeze(target);\n  const targetIsFunction = isFunction(target);\n  Object.getOwnPropertyNames(target).forEach(prop => {\n    // Ignore Ivy properties, ref: https://github.com/ngrx/platform/issues/2109#issuecomment-582689060\n    if (prop.startsWith('ɵ')) {\n      return;\n    }\n    if (hasOwnProperty(target, prop) && (targetIsFunction ? prop !== 'caller' && prop !== 'callee' && prop !== 'arguments' : true)) {\n      const propValue = target[prop];\n      if ((isObjectLike(propValue) || isFunction(propValue)) && !Object.isFrozen(propValue)) {\n        freeze(propValue);\n      }\n    }\n  });\n  return target;\n}\nfunction serializationCheckMetaReducer(reducer, checks) {\n  return function (state, action) {\n    if (checks.action(action)) {\n      const unserializableAction = getUnserializable(action);\n      throwIfUnserializable(unserializableAction, 'action');\n    }\n    const nextState = reducer(state, action);\n    if (checks.state()) {\n      const unserializableState = getUnserializable(nextState);\n      throwIfUnserializable(unserializableState, 'state');\n    }\n    return nextState;\n  };\n}\nfunction getUnserializable(target, path = []) {\n  // Guard against undefined and null, e.g. a reducer that returns undefined\n  if ((isUndefined(target) || isNull(target)) && path.length === 0) {\n    return {\n      path: ['root'],\n      value: target\n    };\n  }\n  const keys = Object.keys(target);\n  return keys.reduce((result, key) => {\n    if (result) {\n      return result;\n    }\n    const value = target[key];\n    // Ignore Ivy components\n    if (isComponent(value)) {\n      return result;\n    }\n    if (isUndefined(value) || isNull(value) || isNumber(value) || isBoolean(value) || isString(value) || isArray(value)) {\n      return false;\n    }\n    if (isPlainObject(value)) {\n      return getUnserializable(value, [...path, key]);\n    }\n    return {\n      path: [...path, key],\n      value\n    };\n  }, false);\n}\nfunction throwIfUnserializable(unserializable, context) {\n  if (unserializable === false) {\n    return;\n  }\n  const unserializablePath = unserializable.path.join('.');\n  const error = new Error(`Detected unserializable ${context} at \"${unserializablePath}\". ${RUNTIME_CHECK_URL}#strict${context}serializability`);\n  error.value = unserializable.value;\n  error.unserializablePath = unserializablePath;\n  throw error;\n}\nfunction inNgZoneAssertMetaReducer(reducer, checks) {\n  return function (state, action) {\n    if (checks.action(action) && !i0.NgZone.isInAngularZone()) {\n      throw new Error(`Action '${action.type}' running outside NgZone. ${RUNTIME_CHECK_URL}#strictactionwithinngzone`);\n    }\n    return reducer(state, action);\n  };\n}\nfunction createActiveRuntimeChecks(runtimeChecks) {\n  if (isDevMode()) {\n    return Object.assign({\n      strictStateSerializability: false,\n      strictActionSerializability: false,\n      strictStateImmutability: true,\n      strictActionImmutability: true,\n      strictActionWithinNgZone: false,\n      strictActionTypeUniqueness: false\n    }, runtimeChecks);\n  }\n  return {\n    strictStateSerializability: false,\n    strictActionSerializability: false,\n    strictStateImmutability: false,\n    strictActionImmutability: false,\n    strictActionWithinNgZone: false,\n    strictActionTypeUniqueness: false\n  };\n}\nfunction createSerializationCheckMetaReducer({\n  strictActionSerializability,\n  strictStateSerializability\n}) {\n  return reducer => strictActionSerializability || strictStateSerializability ? serializationCheckMetaReducer(reducer, {\n    action: action => strictActionSerializability && !ignoreNgrxAction(action),\n    state: () => strictStateSerializability\n  }) : reducer;\n}\nfunction createImmutabilityCheckMetaReducer({\n  strictActionImmutability,\n  strictStateImmutability\n}) {\n  return reducer => strictActionImmutability || strictStateImmutability ? immutabilityCheckMetaReducer(reducer, {\n    action: action => strictActionImmutability && !ignoreNgrxAction(action),\n    state: () => strictStateImmutability\n  }) : reducer;\n}\nfunction ignoreNgrxAction(action) {\n  return action.type.startsWith('@ngrx');\n}\nfunction createInNgZoneCheckMetaReducer({\n  strictActionWithinNgZone\n}) {\n  return reducer => strictActionWithinNgZone ? inNgZoneAssertMetaReducer(reducer, {\n    action: action => strictActionWithinNgZone && !ignoreNgrxAction(action)\n  }) : reducer;\n}\nfunction provideRuntimeChecks(runtimeChecks) {\n  return [{\n    provide: _USER_RUNTIME_CHECKS,\n    useValue: runtimeChecks\n  }, {\n    provide: USER_RUNTIME_CHECKS,\n    useFactory: _runtimeChecksFactory,\n    deps: [_USER_RUNTIME_CHECKS]\n  }, {\n    provide: ACTIVE_RUNTIME_CHECKS,\n    deps: [USER_RUNTIME_CHECKS],\n    useFactory: createActiveRuntimeChecks\n  }, {\n    provide: META_REDUCERS,\n    multi: true,\n    deps: [ACTIVE_RUNTIME_CHECKS],\n    useFactory: createImmutabilityCheckMetaReducer\n  }, {\n    provide: META_REDUCERS,\n    multi: true,\n    deps: [ACTIVE_RUNTIME_CHECKS],\n    useFactory: createSerializationCheckMetaReducer\n  }, {\n    provide: META_REDUCERS,\n    multi: true,\n    deps: [ACTIVE_RUNTIME_CHECKS],\n    useFactory: createInNgZoneCheckMetaReducer\n  }];\n}\nfunction checkForActionTypeUniqueness() {\n  return [{\n    provide: _ACTION_TYPE_UNIQUENESS_CHECK,\n    multi: true,\n    deps: [ACTIVE_RUNTIME_CHECKS],\n    useFactory: _actionTypeUniquenessCheck\n  }];\n}\nfunction _runtimeChecksFactory(runtimeChecks) {\n  return runtimeChecks;\n}\nfunction _actionTypeUniquenessCheck(config) {\n  if (!config.strictActionTypeUniqueness) {\n    return;\n  }\n  const duplicates = Object.entries(REGISTERED_ACTION_TYPES).filter(([, registrations]) => registrations > 1).map(([type]) => type);\n  if (duplicates.length) {\n    throw new Error(`Action types are registered more than once, ${duplicates.map(type => `\"${type}\"`).join(', ')}. ${RUNTIME_CHECK_URL}#strictactiontypeuniqueness`);\n  }\n}\nclass StoreRootModule {\n  constructor(actions$, reducer$, scannedActions$, store, guard, actionCheck) {}\n}\n/** @nocollapse */ /** @nocollapse */\nStoreRootModule.ɵfac = function StoreRootModule_Factory(t) {\n  return new (t || StoreRootModule)(i0.ɵɵinject(ActionsSubject), i0.ɵɵinject(ReducerObservable), i0.ɵɵinject(ScannedActionsSubject), i0.ɵɵinject(Store), i0.ɵɵinject(_ROOT_STORE_GUARD, 8), i0.ɵɵinject(_ACTION_TYPE_UNIQUENESS_CHECK, 8));\n};\n/** @nocollapse */ /** @nocollapse */\nStoreRootModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: StoreRootModule\n});\n/** @nocollapse */ /** @nocollapse */\nStoreRootModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(StoreRootModule, [{\n    type: NgModule,\n    args: [{}]\n  }], function () {\n    return [{\n      type: ActionsSubject\n    }, {\n      type: ReducerObservable\n    }, {\n      type: ScannedActionsSubject\n    }, {\n      type: Store\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [_ROOT_STORE_GUARD]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [_ACTION_TYPE_UNIQUENESS_CHECK]\n      }]\n    }];\n  }, null);\n})();\nclass StoreFeatureModule {\n  constructor(features, featureReducers, reducerManager, root, actionCheck) {\n    this.features = features;\n    this.featureReducers = featureReducers;\n    this.reducerManager = reducerManager;\n    const feats = features.map((feature, index) => {\n      const featureReducerCollection = featureReducers.shift();\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      const reducers = featureReducerCollection /*TODO(#823)*/[index];\n      return Object.assign(Object.assign({}, feature), {\n        reducers,\n        initialState: _initialStateFactory(feature.initialState)\n      });\n    });\n    reducerManager.addFeatures(feats);\n  }\n  // eslint-disable-next-line @angular-eslint/contextual-lifecycle\n  ngOnDestroy() {\n    this.reducerManager.removeFeatures(this.features);\n  }\n}\n/** @nocollapse */ /** @nocollapse */\nStoreFeatureModule.ɵfac = function StoreFeatureModule_Factory(t) {\n  return new (t || StoreFeatureModule)(i0.ɵɵinject(_STORE_FEATURES), i0.ɵɵinject(FEATURE_REDUCERS), i0.ɵɵinject(ReducerManager), i0.ɵɵinject(StoreRootModule), i0.ɵɵinject(_ACTION_TYPE_UNIQUENESS_CHECK, 8));\n};\n/** @nocollapse */ /** @nocollapse */\nStoreFeatureModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: StoreFeatureModule\n});\n/** @nocollapse */ /** @nocollapse */\nStoreFeatureModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(StoreFeatureModule, [{\n    type: NgModule,\n    args: [{}]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [_STORE_FEATURES]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [FEATURE_REDUCERS]\n      }]\n    }, {\n      type: ReducerManager\n    }, {\n      type: StoreRootModule\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [_ACTION_TYPE_UNIQUENESS_CHECK]\n      }]\n    }];\n  }, null);\n})();\nclass StoreModule {\n  static forRoot(reducers, config = {}) {\n    return {\n      ngModule: StoreRootModule,\n      providers: [{\n        provide: _ROOT_STORE_GUARD,\n        useFactory: _provideForRootGuard,\n        deps: [[Store, new Optional(), new SkipSelf()]]\n      }, {\n        provide: _INITIAL_STATE,\n        useValue: config.initialState\n      }, {\n        provide: INITIAL_STATE,\n        useFactory: _initialStateFactory,\n        deps: [_INITIAL_STATE]\n      }, {\n        provide: _INITIAL_REDUCERS,\n        useValue: reducers\n      }, {\n        provide: _STORE_REDUCERS,\n        useExisting: reducers instanceof InjectionToken ? reducers : _INITIAL_REDUCERS\n      }, {\n        provide: INITIAL_REDUCERS,\n        deps: [Injector, _INITIAL_REDUCERS, [new Inject(_STORE_REDUCERS)]],\n        useFactory: _createStoreReducers\n      }, {\n        provide: USER_PROVIDED_META_REDUCERS,\n        useValue: config.metaReducers ? config.metaReducers : []\n      }, {\n        provide: _RESOLVED_META_REDUCERS,\n        deps: [META_REDUCERS, USER_PROVIDED_META_REDUCERS],\n        useFactory: _concatMetaReducers\n      }, {\n        provide: _REDUCER_FACTORY,\n        useValue: config.reducerFactory ? config.reducerFactory : combineReducers\n      }, {\n        provide: REDUCER_FACTORY,\n        deps: [_REDUCER_FACTORY, _RESOLVED_META_REDUCERS],\n        useFactory: createReducerFactory\n      }, ACTIONS_SUBJECT_PROVIDERS, REDUCER_MANAGER_PROVIDERS, SCANNED_ACTIONS_SUBJECT_PROVIDERS, STATE_PROVIDERS, STORE_PROVIDERS, provideRuntimeChecks(config.runtimeChecks), checkForActionTypeUniqueness()]\n    };\n  }\n  static forFeature(featureNameOrSlice, reducers, config = {}) {\n    return {\n      ngModule: StoreFeatureModule,\n      providers: [{\n        provide: _FEATURE_CONFIGS,\n        multi: true,\n        useValue: featureNameOrSlice instanceof Object ? {} : config\n      }, {\n        provide: STORE_FEATURES,\n        multi: true,\n        useValue: {\n          key: featureNameOrSlice instanceof Object ? featureNameOrSlice.name : featureNameOrSlice,\n          reducerFactory: !(config instanceof InjectionToken) && config.reducerFactory ? config.reducerFactory : combineReducers,\n          metaReducers: !(config instanceof InjectionToken) && config.metaReducers ? config.metaReducers : [],\n          initialState: !(config instanceof InjectionToken) && config.initialState ? config.initialState : undefined\n        }\n      }, {\n        provide: _STORE_FEATURES,\n        deps: [Injector, _FEATURE_CONFIGS, STORE_FEATURES],\n        useFactory: _createFeatureStore\n      }, {\n        provide: _FEATURE_REDUCERS,\n        multi: true,\n        useValue: featureNameOrSlice instanceof Object ? featureNameOrSlice.reducer : reducers\n      }, {\n        provide: _FEATURE_REDUCERS_TOKEN,\n        multi: true,\n        useExisting: reducers instanceof InjectionToken ? reducers : _FEATURE_REDUCERS\n      }, {\n        provide: FEATURE_REDUCERS,\n        multi: true,\n        deps: [Injector, _FEATURE_REDUCERS, [new Inject(_FEATURE_REDUCERS_TOKEN)]],\n        useFactory: _createFeatureReducers\n      }, checkForActionTypeUniqueness()]\n    };\n  }\n}\n/** @nocollapse */ /** @nocollapse */\nStoreModule.ɵfac = function StoreModule_Factory(t) {\n  return new (t || StoreModule)();\n};\n/** @nocollapse */ /** @nocollapse */\nStoreModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: StoreModule\n});\n/** @nocollapse */ /** @nocollapse */\nStoreModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(StoreModule, [{\n    type: NgModule,\n    args: [{}]\n  }], null, null);\n})();\nfunction _createStoreReducers(injector, reducers) {\n  return reducers instanceof InjectionToken ? injector.get(reducers) : reducers;\n}\nfunction _createFeatureStore(injector, configs, featureStores) {\n  return featureStores.map((feat, index) => {\n    if (configs[index] instanceof InjectionToken) {\n      const conf = injector.get(configs[index]);\n      return {\n        key: feat.key,\n        reducerFactory: conf.reducerFactory ? conf.reducerFactory : combineReducers,\n        metaReducers: conf.metaReducers ? conf.metaReducers : [],\n        initialState: conf.initialState\n      };\n    }\n    return feat;\n  });\n}\nfunction _createFeatureReducers(injector, reducerCollection) {\n  const reducers = reducerCollection.map(reducer => {\n    return reducer instanceof InjectionToken ? injector.get(reducer) : reducer;\n  });\n  return reducers;\n}\nfunction _initialStateFactory(initialState) {\n  if (typeof initialState === 'function') {\n    return initialState();\n  }\n  return initialState;\n}\nfunction _concatMetaReducers(metaReducers, userProvidedMetaReducers) {\n  return metaReducers.concat(userProvidedMetaReducers);\n}\nfunction _provideForRootGuard(store) {\n  if (store) {\n    throw new TypeError(`StoreModule.forRoot() called twice. Feature modules should use StoreModule.forFeature() instead.`);\n  }\n  return 'guarded';\n}\n\n/**\n * @description\n * Associates actions with a given state change function.\n * A state change function must be provided as the last parameter.\n *\n * @param args `ActionCreator`'s followed by a state change function.\n *\n * @returns an association of action types with a state change function.\n *\n * @usageNotes\n * ```ts\n * on(AuthApiActions.loginSuccess, (state, { user }) => ({ ...state, user }))\n * ```\n */\nfunction on(...args) {\n  // This could be refactored when TS releases the version with this fix:\n  // https://github.com/microsoft/TypeScript/pull/41544\n  const reducer = args.pop();\n  const types = args.map(creator => creator.type);\n  return {\n    reducer,\n    types\n  };\n}\n/**\n * @description\n * Creates a reducer function to handle state transitions.\n *\n * Reducer creators reduce the explicitness of reducer functions with switch statements.\n *\n * @param initialState Provides a state value if the current state is `undefined`, as it is initially.\n * @param ons Associations between actions and state changes.\n * @returns A reducer function.\n *\n * @usageNotes\n *\n * - Must be used with `ActionCreator`'s (returned by `createAction`). Cannot be used with class-based action creators.\n * - The returned `ActionReducer` should additionally be wrapped with another function, if you are using View Engine AOT.\n * In case you are using Ivy (or only JIT View Engine) the extra wrapper function is not required.\n *\n * **Declaring a reducer creator**\n *\n * ```ts\n * export const reducer = createReducer(\n *   initialState,\n *   on(\n *     featureActions.actionOne,\n *     featureActions.actionTwo,\n *     (state, { updatedValue }) => ({ ...state, prop: updatedValue })\n *   ),\n *   on(featureActions.actionThree, () => initialState);\n * );\n * ```\n *\n * **Declaring a reducer creator using a wrapper function (Only needed if using View Engine AOT)**\n *\n * ```ts\n * const featureReducer = createReducer(\n *   initialState,\n *   on(\n *     featureActions.actionOne,\n *     featureActions.actionTwo,\n *     (state, { updatedValue }) => ({ ...state, prop: updatedValue })\n *   ),\n *   on(featureActions.actionThree, () => initialState);\n * );\n *\n * export function reducer(state: State | undefined, action: Action) {\n *   return featureReducer(state, action);\n * }\n * ```\n */\nfunction createReducer(initialState, ...ons) {\n  const map = new Map();\n  for (const on of ons) {\n    for (const type of on.types) {\n      const existingReducer = map.get(type);\n      if (existingReducer) {\n        const newReducer = (state, action) => on.reducer(existingReducer(state, action), action);\n        map.set(type, newReducer);\n      } else {\n        map.set(type, on.reducer);\n      }\n    }\n  }\n  return function (state = initialState, action) {\n    const reducer = map.get(action.type);\n    return reducer ? reducer(state, action) : state;\n  };\n}\n\n/**\n * DO NOT EDIT\n *\n * This file is automatically generated at build\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { ACTIVE_RUNTIME_CHECKS, ActionsSubject, FEATURE_REDUCERS, INIT, INITIAL_REDUCERS, INITIAL_STATE, META_REDUCERS, REDUCER_FACTORY, ReducerManager, ReducerManagerDispatcher, ReducerObservable, STORE_FEATURES, ScannedActionsSubject, State, StateObservable, Store, StoreFeatureModule, StoreModule, StoreRootModule, UPDATE, USER_PROVIDED_META_REDUCERS, USER_RUNTIME_CHECKS, combineReducers, compose, createAction, createActionGroup, createFeature, createFeatureSelector, createReducer, createReducerFactory, createSelector, createSelectorFactory, defaultMemoize, defaultStateFn, emptyProps, isNgrxMockEnvironment, on, props, reduceState, resultMemoize, select, setNgrxMockEnvironment, union };","map":{"version":3,"names":["i0","Injectable","InjectionToken","Inject","isDevMode","NgModule","Optional","SkipSelf","Injector","BehaviorSubject","Observable","Subject","queueScheduler","observeOn","withLatestFrom","scan","pluck","map","distinctUntilChanged","REGISTERED_ACTION_TYPES","resetRegisteredActionTypes","key","Object","keys","createAction","type","config","defineType","args","assign","as","_as","props","Error","_p","undefined","union","creators","creator","defineProperty","value","writable","capitalize","text","charAt","toUpperCase","substr","createActionGroup","source","events","reduce","actionGroup","eventName","toActionName","toActionType","emptyProps","trim","toLowerCase","split","word","i","join","INIT","ActionsSubject","constructor","next","action","TypeError","complete","ngOnDestroy","ɵfac","ActionsSubject_Factory","t","ɵprov","ɵɵdefineInjectable","token","factory","ngDevMode","ɵsetClassMetadata","ACTIONS_SUBJECT_PROVIDERS","_ROOT_STORE_GUARD","_INITIAL_STATE","INITIAL_STATE","REDUCER_FACTORY","_REDUCER_FACTORY","INITIAL_REDUCERS","_INITIAL_REDUCERS","STORE_FEATURES","_STORE_REDUCERS","_FEATURE_REDUCERS","_FEATURE_CONFIGS","_STORE_FEATURES","_FEATURE_REDUCERS_TOKEN","FEATURE_REDUCERS","USER_PROVIDED_META_REDUCERS","META_REDUCERS","_RESOLVED_META_REDUCERS","USER_RUNTIME_CHECKS","_USER_RUNTIME_CHECKS","ACTIVE_RUNTIME_CHECKS","_ACTION_TYPE_UNIQUENESS_CHECK","combineReducers","reducers","initialState","reducerKeys","finalReducers","length","finalReducerKeys","combination","state","hasChanged","nextState","reducer","previousStateForKey","nextStateForKey","omit","object","keyToRemove","filter","result","compose","functions","arg","last","rest","slice","reduceRight","composed","fn","createReducerFactory","reducerFactory","metaReducers","Array","isArray","apply","createFeatureReducerFactory","r","ReducerObservable","ReducerManagerDispatcher","UPDATE","ReducerManager","dispatcher","currentReducers","addFeature","feature","addFeatures","features","reducerDict","addReducers","removeFeature","removeFeatures","removeReducers","p","addReducer","updateReducers","removeReducer","featureKey","featureKeys","forEach","ReducerManager_Factory","ɵɵinject","decorators","REDUCER_MANAGER_PROVIDERS","provide","useExisting","ScannedActionsSubject","ɵScannedActionsSubject_BaseFactory","ScannedActionsSubject_Factory","ɵɵgetInheritedFactory","SCANNED_ACTIONS_SUBJECT_PROVIDERS","StateObservable","State","actions$","reducer$","scannedActions","actionsOnQueue$","pipe","withLatestReducer$","seed","stateAndAction$","reduceState","stateSubscription","subscribe","unsubscribe","State_Factory","stateActionPair","STATE_PROVIDERS","Store","state$","actionsObserver","reducerManager","select","pathOrMapFn","paths","call","lift","operator","store","dispatch","error","err","Store_Factory","STORE_PROVIDERS","propsOrPath","selectOperator","source$","mapped$","pathSlices","Boolean","RUNTIME_CHECK_URL","isUndefined","target","isNull","isString","isBoolean","isNumber","isObjectLike","isObject","isPlainObject","targetPrototype","getPrototypeOf","prototype","isFunction","isComponent","hasOwnProperty","propertyName","_ngrxMockEnvironment","setNgrxMockEnvironment","isNgrxMockEnvironment","isEqualCheck","a","b","isArgumentsChanged","lastArguments","comparator","resultMemoize","projectionFn","isResultEqual","defaultMemoize","isArgumentsEqual","lastResult","overrideResult","reset","setResult","clearResult","memoized","arguments","newResult","createSelector","input","createSelectorFactory","defaultStateFn","selectors","memoizedProjector","memoize","options","stateFn","head","tail","projector","memoizedSelectors","selector","release","memoizedState","createFeatureSelector","featureName","featureState","console","warn","createFeature","featureConfig","name","featureSelector","nestedSelectors","createNestedSelectors","getInitialState","nestedKeys","nestedKey","parentState","immutabilityCheckMetaReducer","checks","act","freeze","targetIsFunction","getOwnPropertyNames","prop","startsWith","propValue","isFrozen","serializationCheckMetaReducer","unserializableAction","getUnserializable","throwIfUnserializable","unserializableState","path","unserializable","context","unserializablePath","inNgZoneAssertMetaReducer","NgZone","isInAngularZone","createActiveRuntimeChecks","runtimeChecks","strictStateSerializability","strictActionSerializability","strictStateImmutability","strictActionImmutability","strictActionWithinNgZone","strictActionTypeUniqueness","createSerializationCheckMetaReducer","ignoreNgrxAction","createImmutabilityCheckMetaReducer","createInNgZoneCheckMetaReducer","provideRuntimeChecks","useValue","useFactory","_runtimeChecksFactory","deps","multi","checkForActionTypeUniqueness","_actionTypeUniquenessCheck","duplicates","entries","registrations","StoreRootModule","scannedActions$","guard","actionCheck","StoreRootModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","StoreFeatureModule","featureReducers","root","feats","index","featureReducerCollection","shift","_initialStateFactory","StoreFeatureModule_Factory","StoreModule","forRoot","ngModule","providers","_provideForRootGuard","_createStoreReducers","_concatMetaReducers","forFeature","featureNameOrSlice","_createFeatureStore","_createFeatureReducers","StoreModule_Factory","injector","get","configs","featureStores","feat","conf","reducerCollection","userProvidedMetaReducers","concat","on","pop","types","createReducer","ons","Map","existingReducer","newReducer","set"],"sources":["D:/angular-factory/node_modules/@ngrx/store/fesm2015/ngrx-store.mjs"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { Injectable, InjectionToken, Inject, isDevMode, NgModule, Optional, SkipSelf, Injector } from '@angular/core';\nimport { BehaviorSubject, Observable, Subject, queueScheduler } from 'rxjs';\nimport { observeOn, withLatestFrom, scan, pluck, map, distinctUntilChanged } from 'rxjs/operators';\n\nconst REGISTERED_ACTION_TYPES = {};\nfunction resetRegisteredActionTypes() {\n    for (const key of Object.keys(REGISTERED_ACTION_TYPES)) {\n        delete REGISTERED_ACTION_TYPES[key];\n    }\n}\n\n/**\n * @description\n * Creates a configured `Creator` function that, when called, returns an object in the shape of the `Action` interface.\n *\n * Action creators reduce the explicitness of class-based action creators.\n *\n * @param type Describes the action that will be dispatched\n * @param config Additional metadata needed for the handling of the action.  See {@link createAction#usage-notes Usage Notes}.\n *\n * @usageNotes\n *\n * **Declaring an action creator**\n *\n * Without additional metadata:\n * ```ts\n * export const increment = createAction('[Counter] Increment');\n * ```\n * With additional metadata:\n * ```ts\n * export const loginSuccess = createAction(\n *   '[Auth/API] Login Success',\n *   props<{ user: User }>()\n * );\n * ```\n * With a function:\n * ```ts\n * export const loginSuccess = createAction(\n *   '[Auth/API] Login Success',\n *   (response: Response) => response.user\n * );\n * ```\n *\n * **Dispatching an action**\n *\n * Without additional metadata:\n * ```ts\n * store.dispatch(increment());\n * ```\n * With additional metadata:\n * ```ts\n * store.dispatch(loginSuccess({ user: newUser }));\n * ```\n *\n * **Referencing an action in a reducer**\n *\n * Using a switch statement:\n * ```ts\n * switch (action.type) {\n *   // ...\n *   case AuthApiActions.loginSuccess.type: {\n *     return {\n *       ...state,\n *       user: action.user\n *     };\n *   }\n * }\n * ```\n * Using a reducer creator:\n * ```ts\n * on(AuthApiActions.loginSuccess, (state, { user }) => ({ ...state, user }))\n * ```\n *\n *  **Referencing an action in an effect**\n * ```ts\n * effectName$ = createEffect(\n *   () => this.actions$.pipe(\n *     ofType(AuthApiActions.loginSuccess),\n *     // ...\n *   )\n * );\n * ```\n */\nfunction createAction(type, config) {\n    REGISTERED_ACTION_TYPES[type] = (REGISTERED_ACTION_TYPES[type] || 0) + 1;\n    if (typeof config === 'function') {\n        return defineType(type, (...args) => (Object.assign(Object.assign({}, config(...args)), { type })));\n    }\n    const as = config ? config._as : 'empty';\n    switch (as) {\n        case 'empty':\n            return defineType(type, () => ({ type }));\n        case 'props':\n            return defineType(type, (props) => (Object.assign(Object.assign({}, props), { type })));\n        default:\n            throw new Error('Unexpected config.');\n    }\n}\nfunction props() {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion, @typescript-eslint/naming-convention\n    return { _as: 'props', _p: undefined };\n}\nfunction union(creators) {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    return undefined;\n}\nfunction defineType(type, creator) {\n    return Object.defineProperty(creator, 'type', {\n        value: type,\n        writable: false,\n    });\n}\n\nfunction capitalize(text) {\n    return (text.charAt(0).toUpperCase() + text.substr(1));\n}\n\n/**\n * @description\n * A function that creates a group of action creators with the same source.\n *\n * @param config An object that contains a source and dictionary of events.\n * An event is a key-value pair of an event name and event props.\n * @returns A dictionary of action creators.\n * The name of each action creator is created by camel casing the event name.\n * The type of each action is created using the \"[Source] Event Name\" pattern.\n *\n * @usageNotes\n *\n * ```ts\n * const authApiActions = createActionGroup({\n *   source: 'Auth API',\n *   events: {\n *     // defining events with payload using the `props` function\n *     'Login Success': props<{ userId: number; token: string }>(),\n *     'Login Failure': props<{ error: string }>(),\n *\n *     // defining an event without payload using the `emptyProps` function\n *     'Logout Success': emptyProps(),\n *\n *     // defining an event with payload using the props factory\n *     'Logout Failure': (error: Error) => ({ error }),\n *   },\n * });\n *\n * // action type: \"[Auth API] Login Success\"\n * authApiActions.loginSuccess({ userId: 10, token: 'ngrx' });\n *\n * // action type: \"[Auth API] Login Failure\"\n * authApiActions.loginFailure({ error: 'Login Failure!' });\n *\n * // action type: \"[Auth API] Logout Success\"\n * authApiActions.logoutSuccess();\n *\n * // action type: \"[Auth API] Logout Failure\";\n * authApiActions.logoutFailure(new Error('Logout Failure!'));\n * ```\n */\nfunction createActionGroup(config) {\n    const { source, events } = config;\n    return Object.keys(events).reduce((actionGroup, eventName) => (Object.assign(Object.assign({}, actionGroup), { [toActionName(eventName)]: createAction(toActionType(source, eventName), events[eventName]) })), {});\n}\nfunction emptyProps() {\n    return props();\n}\nfunction toActionName(eventName) {\n    return eventName\n        .trim()\n        .toLowerCase()\n        .split(' ')\n        .map((word, i) => (i === 0 ? word : capitalize(word)))\n        .join('');\n}\nfunction toActionType(source, eventName) {\n    return `[${source}] ${eventName}`;\n}\n\nconst INIT = '@ngrx/store/init';\nclass ActionsSubject extends BehaviorSubject {\n    constructor() {\n        super({ type: INIT });\n    }\n    next(action) {\n        if (typeof action === 'function') {\n            throw new TypeError(`\n        Dispatch expected an object, instead it received a function.\n        If you're using the createAction function, make sure to invoke the function\n        before dispatching the action. For example, someAction should be someAction().`);\n        }\n        else if (typeof action === 'undefined') {\n            throw new TypeError(`Actions must be objects`);\n        }\n        else if (typeof action.type === 'undefined') {\n            throw new TypeError(`Actions must have a type property`);\n        }\n        super.next(action);\n    }\n    complete() {\n        /* noop */\n    }\n    ngOnDestroy() {\n        super.complete();\n    }\n}\n/** @nocollapse */ /** @nocollapse */ ActionsSubject.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: ActionsSubject, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n/** @nocollapse */ /** @nocollapse */ ActionsSubject.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: ActionsSubject });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: ActionsSubject, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return []; } });\nconst ACTIONS_SUBJECT_PROVIDERS = [ActionsSubject];\n\nconst _ROOT_STORE_GUARD = new InjectionToken('@ngrx/store Internal Root Guard');\nconst _INITIAL_STATE = new InjectionToken('@ngrx/store Internal Initial State');\nconst INITIAL_STATE = new InjectionToken('@ngrx/store Initial State');\nconst REDUCER_FACTORY = new InjectionToken('@ngrx/store Reducer Factory');\nconst _REDUCER_FACTORY = new InjectionToken('@ngrx/store Internal Reducer Factory Provider');\nconst INITIAL_REDUCERS = new InjectionToken('@ngrx/store Initial Reducers');\nconst _INITIAL_REDUCERS = new InjectionToken('@ngrx/store Internal Initial Reducers');\nconst STORE_FEATURES = new InjectionToken('@ngrx/store Store Features');\nconst _STORE_REDUCERS = new InjectionToken('@ngrx/store Internal Store Reducers');\nconst _FEATURE_REDUCERS = new InjectionToken('@ngrx/store Internal Feature Reducers');\nconst _FEATURE_CONFIGS = new InjectionToken('@ngrx/store Internal Feature Configs');\nconst _STORE_FEATURES = new InjectionToken('@ngrx/store Internal Store Features');\nconst _FEATURE_REDUCERS_TOKEN = new InjectionToken('@ngrx/store Internal Feature Reducers Token');\nconst FEATURE_REDUCERS = new InjectionToken('@ngrx/store Feature Reducers');\n/**\n * User-defined meta reducers from StoreModule.forRoot()\n */\nconst USER_PROVIDED_META_REDUCERS = new InjectionToken('@ngrx/store User Provided Meta Reducers');\n/**\n * Meta reducers defined either internally by @ngrx/store or by library authors\n */\nconst META_REDUCERS = new InjectionToken('@ngrx/store Meta Reducers');\n/**\n * Concats the user provided meta reducers and the meta reducers provided on the multi\n * injection token\n */\nconst _RESOLVED_META_REDUCERS = new InjectionToken('@ngrx/store Internal Resolved Meta Reducers');\n/**\n * Runtime checks defined by the user via an InjectionToken\n * Defaults to `_USER_RUNTIME_CHECKS`\n */\nconst USER_RUNTIME_CHECKS = new InjectionToken('@ngrx/store User Runtime Checks Config');\n/**\n * Runtime checks defined by the user via forRoot()\n */\nconst _USER_RUNTIME_CHECKS = new InjectionToken('@ngrx/store Internal User Runtime Checks Config');\n/**\n * Runtime checks currently in use\n */\nconst ACTIVE_RUNTIME_CHECKS = new InjectionToken('@ngrx/store Internal Runtime Checks');\nconst _ACTION_TYPE_UNIQUENESS_CHECK = new InjectionToken('@ngrx/store Check if Action types are unique');\n\n/**\n * @description\n * Combines reducers for individual features into a single reducer.\n *\n * You can use this function to delegate handling of state transitions to multiple reducers, each acting on their\n * own sub-state within the root state.\n *\n * @param reducers An object mapping keys of the root state to their corresponding feature reducer.\n * @param initialState Provides a state value if the current state is `undefined`, as it is initially.\n * @returns A reducer function.\n *\n * @usageNotes\n *\n * **Example combining two feature reducers into one \"root\" reducer**\n *\n * ```ts\n * export const reducer = combineReducers({\n *   featureA: featureAReducer,\n *   featureB: featureBReducer\n * });\n * ```\n *\n * You can also override the initial states of the sub-features:\n * ```ts\n * export const reducer = combineReducers({\n *   featureA: featureAReducer,\n *   featureB: featureBReducer\n * }, {\n *   featureA: { counterA: 13 },\n *   featureB: { counterB: 37 }\n * });\n * ```\n */\nfunction combineReducers(reducers, initialState = {}) {\n    const reducerKeys = Object.keys(reducers);\n    const finalReducers = {};\n    for (let i = 0; i < reducerKeys.length; i++) {\n        const key = reducerKeys[i];\n        if (typeof reducers[key] === 'function') {\n            finalReducers[key] = reducers[key];\n        }\n    }\n    const finalReducerKeys = Object.keys(finalReducers);\n    return function combination(state, action) {\n        state = state === undefined ? initialState : state;\n        let hasChanged = false;\n        const nextState = {};\n        for (let i = 0; i < finalReducerKeys.length; i++) {\n            const key = finalReducerKeys[i];\n            const reducer = finalReducers[key];\n            const previousStateForKey = state[key];\n            const nextStateForKey = reducer(previousStateForKey, action);\n            nextState[key] = nextStateForKey;\n            hasChanged = hasChanged || nextStateForKey !== previousStateForKey;\n        }\n        return hasChanged ? nextState : state;\n    };\n}\nfunction omit(object, keyToRemove) {\n    return Object.keys(object)\n        .filter((key) => key !== keyToRemove)\n        .reduce((result, key) => Object.assign(result, { [key]: object[key] }), {});\n}\nfunction compose(...functions) {\n    return function (arg) {\n        if (functions.length === 0) {\n            return arg;\n        }\n        const last = functions[functions.length - 1];\n        const rest = functions.slice(0, -1);\n        return rest.reduceRight((composed, fn) => fn(composed), last(arg));\n    };\n}\nfunction createReducerFactory(reducerFactory, metaReducers) {\n    if (Array.isArray(metaReducers) && metaReducers.length > 0) {\n        reducerFactory = compose.apply(null, [\n            ...metaReducers,\n            reducerFactory,\n        ]);\n    }\n    return (reducers, initialState) => {\n        const reducer = reducerFactory(reducers);\n        return (state, action) => {\n            state = state === undefined ? initialState : state;\n            return reducer(state, action);\n        };\n    };\n}\nfunction createFeatureReducerFactory(metaReducers) {\n    const reducerFactory = Array.isArray(metaReducers) && metaReducers.length > 0\n        ? compose(...metaReducers)\n        : (r) => r;\n    return (reducer, initialState) => {\n        reducer = reducerFactory(reducer);\n        return (state, action) => {\n            state = state === undefined ? initialState : state;\n            return reducer(state, action);\n        };\n    };\n}\n\nclass ReducerObservable extends Observable {\n}\nclass ReducerManagerDispatcher extends ActionsSubject {\n}\nconst UPDATE = '@ngrx/store/update-reducers';\nclass ReducerManager extends BehaviorSubject {\n    constructor(dispatcher, initialState, reducers, reducerFactory) {\n        super(reducerFactory(reducers, initialState));\n        this.dispatcher = dispatcher;\n        this.initialState = initialState;\n        this.reducers = reducers;\n        this.reducerFactory = reducerFactory;\n    }\n    get currentReducers() {\n        return this.reducers;\n    }\n    addFeature(feature) {\n        this.addFeatures([feature]);\n    }\n    addFeatures(features) {\n        const reducers = features.reduce((reducerDict, { reducers, reducerFactory, metaReducers, initialState, key }) => {\n            const reducer = typeof reducers === 'function'\n                ? createFeatureReducerFactory(metaReducers)(reducers, initialState)\n                : createReducerFactory(reducerFactory, metaReducers)(reducers, initialState);\n            reducerDict[key] = reducer;\n            return reducerDict;\n        }, {});\n        this.addReducers(reducers);\n    }\n    removeFeature(feature) {\n        this.removeFeatures([feature]);\n    }\n    removeFeatures(features) {\n        this.removeReducers(features.map((p) => p.key));\n    }\n    addReducer(key, reducer) {\n        this.addReducers({ [key]: reducer });\n    }\n    addReducers(reducers) {\n        this.reducers = Object.assign(Object.assign({}, this.reducers), reducers);\n        this.updateReducers(Object.keys(reducers));\n    }\n    removeReducer(featureKey) {\n        this.removeReducers([featureKey]);\n    }\n    removeReducers(featureKeys) {\n        featureKeys.forEach((key) => {\n            this.reducers = omit(this.reducers, key) /*TODO(#823)*/;\n        });\n        this.updateReducers(featureKeys);\n    }\n    updateReducers(featureKeys) {\n        this.next(this.reducerFactory(this.reducers, this.initialState));\n        this.dispatcher.next({\n            type: UPDATE,\n            features: featureKeys,\n        });\n    }\n    ngOnDestroy() {\n        this.complete();\n    }\n}\n/** @nocollapse */ /** @nocollapse */ ReducerManager.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: ReducerManager, deps: [{ token: ReducerManagerDispatcher }, { token: INITIAL_STATE }, { token: INITIAL_REDUCERS }, { token: REDUCER_FACTORY }], target: i0.ɵɵFactoryTarget.Injectable });\n/** @nocollapse */ /** @nocollapse */ ReducerManager.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: ReducerManager });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: ReducerManager, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () {\n        return [{ type: ReducerManagerDispatcher }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [INITIAL_STATE]\n                    }] }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [INITIAL_REDUCERS]\n                    }] }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [REDUCER_FACTORY]\n                    }] }];\n    } });\nconst REDUCER_MANAGER_PROVIDERS = [\n    ReducerManager,\n    { provide: ReducerObservable, useExisting: ReducerManager },\n    { provide: ReducerManagerDispatcher, useExisting: ActionsSubject },\n];\n\nclass ScannedActionsSubject extends Subject {\n    ngOnDestroy() {\n        this.complete();\n    }\n}\n/** @nocollapse */ /** @nocollapse */ ScannedActionsSubject.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: ScannedActionsSubject, deps: null, target: i0.ɵɵFactoryTarget.Injectable });\n/** @nocollapse */ /** @nocollapse */ ScannedActionsSubject.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: ScannedActionsSubject });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: ScannedActionsSubject, decorators: [{\n            type: Injectable\n        }] });\nconst SCANNED_ACTIONS_SUBJECT_PROVIDERS = [\n    ScannedActionsSubject,\n];\n\nclass StateObservable extends Observable {\n}\nclass State extends BehaviorSubject {\n    constructor(actions$, reducer$, scannedActions, initialState) {\n        super(initialState);\n        const actionsOnQueue$ = actions$.pipe(observeOn(queueScheduler));\n        const withLatestReducer$ = actionsOnQueue$.pipe(withLatestFrom(reducer$));\n        const seed = { state: initialState };\n        const stateAndAction$ = withLatestReducer$.pipe(scan(reduceState, seed));\n        this.stateSubscription = stateAndAction$.subscribe(({ state, action }) => {\n            this.next(state);\n            scannedActions.next(action);\n        });\n    }\n    ngOnDestroy() {\n        this.stateSubscription.unsubscribe();\n        this.complete();\n    }\n}\nState.INIT = INIT;\n/** @nocollapse */ /** @nocollapse */ State.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: State, deps: [{ token: ActionsSubject }, { token: ReducerObservable }, { token: ScannedActionsSubject }, { token: INITIAL_STATE }], target: i0.ɵɵFactoryTarget.Injectable });\n/** @nocollapse */ /** @nocollapse */ State.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: State });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: State, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () {\n        return [{ type: ActionsSubject }, { type: ReducerObservable }, { type: ScannedActionsSubject }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [INITIAL_STATE]\n                    }] }];\n    } });\nfunction reduceState(stateActionPair = { state: undefined }, [action, reducer]) {\n    const { state } = stateActionPair;\n    return { state: reducer(state, action), action };\n}\nconst STATE_PROVIDERS = [\n    State,\n    { provide: StateObservable, useExisting: State },\n];\n\n/* eslint-disable @typescript-eslint/naming-convention */\nclass Store extends Observable {\n    constructor(state$, actionsObserver, reducerManager) {\n        super();\n        this.actionsObserver = actionsObserver;\n        this.reducerManager = reducerManager;\n        this.source = state$;\n    }\n    select(pathOrMapFn, ...paths) {\n        return select.call(null, pathOrMapFn, ...paths)(this);\n    }\n    lift(operator) {\n        const store = new Store(this, this.actionsObserver, this.reducerManager);\n        store.operator = operator;\n        return store;\n    }\n    dispatch(action) {\n        this.actionsObserver.next(action);\n    }\n    next(action) {\n        this.actionsObserver.next(action);\n    }\n    error(err) {\n        this.actionsObserver.error(err);\n    }\n    complete() {\n        this.actionsObserver.complete();\n    }\n    addReducer(key, reducer) {\n        this.reducerManager.addReducer(key, reducer);\n    }\n    removeReducer(key) {\n        this.reducerManager.removeReducer(key);\n    }\n}\n/** @nocollapse */ /** @nocollapse */ Store.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: Store, deps: [{ token: StateObservable }, { token: ActionsSubject }, { token: ReducerManager }], target: i0.ɵɵFactoryTarget.Injectable });\n/** @nocollapse */ /** @nocollapse */ Store.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: Store });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: Store, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: StateObservable }, { type: ActionsSubject }, { type: ReducerManager }]; } });\nconst STORE_PROVIDERS = [Store];\nfunction select(pathOrMapFn, propsOrPath, ...paths) {\n    return function selectOperator(source$) {\n        let mapped$;\n        if (typeof pathOrMapFn === 'string') {\n            const pathSlices = [propsOrPath, ...paths].filter(Boolean);\n            mapped$ = source$.pipe(pluck(pathOrMapFn, ...pathSlices));\n        }\n        else if (typeof pathOrMapFn === 'function') {\n            mapped$ = source$.pipe(map((source) => pathOrMapFn(source, propsOrPath)));\n        }\n        else {\n            throw new TypeError(`Unexpected type '${typeof pathOrMapFn}' in select operator,` +\n                ` expected 'string' or 'function'`);\n        }\n        return mapped$.pipe(distinctUntilChanged());\n    };\n}\n\nconst RUNTIME_CHECK_URL = 'https://ngrx.io/guide/store/configuration/runtime-checks';\nfunction isUndefined(target) {\n    return target === undefined;\n}\nfunction isNull(target) {\n    return target === null;\n}\nfunction isArray(target) {\n    return Array.isArray(target);\n}\nfunction isString(target) {\n    return typeof target === 'string';\n}\nfunction isBoolean(target) {\n    return typeof target === 'boolean';\n}\nfunction isNumber(target) {\n    return typeof target === 'number';\n}\nfunction isObjectLike(target) {\n    return typeof target === 'object' && target !== null;\n}\nfunction isObject(target) {\n    return isObjectLike(target) && !isArray(target);\n}\nfunction isPlainObject(target) {\n    if (!isObject(target)) {\n        return false;\n    }\n    const targetPrototype = Object.getPrototypeOf(target);\n    return targetPrototype === Object.prototype || targetPrototype === null;\n}\nfunction isFunction(target) {\n    return typeof target === 'function';\n}\nfunction isComponent(target) {\n    return isFunction(target) && target.hasOwnProperty('ɵcmp');\n}\nfunction hasOwnProperty(target, propertyName) {\n    return Object.prototype.hasOwnProperty.call(target, propertyName);\n}\n\nlet _ngrxMockEnvironment = false;\nfunction setNgrxMockEnvironment(value) {\n    _ngrxMockEnvironment = value;\n}\nfunction isNgrxMockEnvironment() {\n    return _ngrxMockEnvironment;\n}\n\nfunction isEqualCheck(a, b) {\n    return a === b;\n}\nfunction isArgumentsChanged(args, lastArguments, comparator) {\n    for (let i = 0; i < args.length; i++) {\n        if (!comparator(args[i], lastArguments[i])) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction resultMemoize(projectionFn, isResultEqual) {\n    return defaultMemoize(projectionFn, isEqualCheck, isResultEqual);\n}\nfunction defaultMemoize(projectionFn, isArgumentsEqual = isEqualCheck, isResultEqual = isEqualCheck) {\n    let lastArguments = null;\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any, , , , ,\n    let lastResult = null;\n    let overrideResult;\n    function reset() {\n        lastArguments = null;\n        lastResult = null;\n    }\n    function setResult(result = undefined) {\n        overrideResult = { result };\n    }\n    function clearResult() {\n        overrideResult = undefined;\n    }\n    /* eslint-disable prefer-rest-params, prefer-spread */\n    // disabled because of the use of `arguments`\n    function memoized() {\n        if (overrideResult !== undefined) {\n            return overrideResult.result;\n        }\n        if (!lastArguments) {\n            lastResult = projectionFn.apply(null, arguments);\n            lastArguments = arguments;\n            return lastResult;\n        }\n        if (!isArgumentsChanged(arguments, lastArguments, isArgumentsEqual)) {\n            return lastResult;\n        }\n        const newResult = projectionFn.apply(null, arguments);\n        lastArguments = arguments;\n        if (isResultEqual(lastResult, newResult)) {\n            return lastResult;\n        }\n        lastResult = newResult;\n        return newResult;\n    }\n    return { memoized, reset, setResult, clearResult };\n}\nfunction createSelector(...input) {\n    return createSelectorFactory(defaultMemoize)(...input);\n}\nfunction defaultStateFn(state, selectors, props, memoizedProjector) {\n    if (props === undefined) {\n        const args = selectors.map((fn) => fn(state));\n        return memoizedProjector.memoized.apply(null, args);\n    }\n    const args = selectors.map((fn) => fn(state, props));\n    return memoizedProjector.memoized.apply(null, [...args, props]);\n}\n/**\n *\n * @param memoize The function used to memoize selectors\n * @param options Config Object that may include a `stateFn` function defining how to return the selector's value, given the entire `Store`'s state, parent `Selector`s, `Props`, and a `MemoizedProjection`\n *\n * @usageNotes\n *\n * **Creating a Selector Factory Where Array Order Does Not Matter**\n *\n * ```ts\n * function removeMatch(arr: string[], target: string): string[] {\n *   const matchIndex = arr.indexOf(target);\n *   return [...arr.slice(0, matchIndex), ...arr.slice(matchIndex + 1)];\n * }\n *\n * function orderDoesNotMatterComparer(a: any, b: any): boolean {\n *   if (!Array.isArray(a) || !Array.isArray(b)) {\n *     return a === b;\n *   }\n *   if (a.length !== b.length) {\n *     return false;\n *   }\n *   let tempB = [...b];\n *   function reduceToDetermineIfArraysContainSameContents(\n *     previousCallResult: boolean,\n *     arrayMember: any\n *   ): boolean {\n *     if (previousCallResult === false) {\n *       return false;\n *     }\n *     if (tempB.includes(arrayMember)) {\n *       tempB = removeMatch(tempB, arrayMember);\n *       return true;\n *     }\n *     return false;\n *   }\n *   return a.reduce(reduceToDetermineIfArraysContainSameContents, true);\n * }\n *\n * export const creactOrderDoesNotMatterSelector = createSelectorFactory(\n *   (projectionFun) => defaultMemoize(\n *     projectionFun,\n *     orderDoesNotMatterComparer,\n *     orderDoesNotMatterComparer\n *   )\n * );\n * ```\n *\n * **Creating an Alternative Memoization Strategy**\n *\n * ```ts\n * function serialize(x: any): string {\n *   return JSON.stringify(x);\n * }\n *\n * export const createFullHistorySelector = createSelectorFactory(\n *  (projectionFunction) => {\n *    const cache = {};\n *\n *    function memoized() {\n *      const serializedArguments = serialize(...arguments);\n *       if (cache[serializedArguments] != null) {\n *         cache[serializedArguments] = projectionFunction.apply(null, arguments);\n *       }\n *       return cache[serializedArguments];\n *     }\n *     return {\n *       memoized,\n *       reset: () => {},\n *       setResult: () => {},\n *       clearResult: () => {},\n *     };\n *   }\n * );\n * ```\n *\n *\n */\nfunction createSelectorFactory(memoize, options = {\n    stateFn: defaultStateFn,\n}) {\n    return function (...input) {\n        let args = input;\n        if (Array.isArray(args[0])) {\n            const [head, ...tail] = args;\n            args = [...head, ...tail];\n        }\n        const selectors = args.slice(0, args.length - 1);\n        const projector = args[args.length - 1];\n        const memoizedSelectors = selectors.filter((selector) => selector.release && typeof selector.release === 'function');\n        const memoizedProjector = memoize(function (...selectors) {\n            return projector.apply(null, selectors);\n        });\n        const memoizedState = defaultMemoize(function (state, props) {\n            return options.stateFn.apply(null, [\n                state,\n                selectors,\n                props,\n                memoizedProjector,\n            ]);\n        });\n        function release() {\n            memoizedState.reset();\n            memoizedProjector.reset();\n            memoizedSelectors.forEach((selector) => selector.release());\n        }\n        return Object.assign(memoizedState.memoized, {\n            release,\n            projector: memoizedProjector.memoized,\n            setResult: memoizedState.setResult,\n            clearResult: memoizedState.clearResult,\n        });\n    };\n}\nfunction createFeatureSelector(featureName) {\n    return createSelector((state) => {\n        const featureState = state[featureName];\n        if (!isNgrxMockEnvironment() && isDevMode() && !(featureName in state)) {\n            console.warn(`@ngrx/store: The feature name \"${featureName}\" does ` +\n                'not exist in the state, therefore createFeatureSelector ' +\n                'cannot access it.  Be sure it is imported in a loaded module ' +\n                `using StoreModule.forRoot('${featureName}', ...) or ` +\n                `StoreModule.forFeature('${featureName}', ...).  If the default ` +\n                'state is intended to be undefined, as is the case with router ' +\n                'state, this development-only warning message can be ignored.');\n        }\n        return featureState;\n    }, (featureState) => featureState);\n}\n\n/**\n * @description\n * A function that accepts a feature name and a feature reducer, and creates\n * a feature selector and a selector for each feature state property.\n *\n * @param featureConfig An object that contains a feature name and a feature reducer.\n * @returns An object that contains a feature name, a feature reducer,\n * a feature selector, and a selector for each feature state property.\n *\n * @usageNotes\n *\n * **With Application State**\n *\n * ```ts\n * interface AppState {\n *   products: ProductsState;\n * }\n *\n * interface ProductsState {\n *   products: Product[];\n *   selectedId: string | null;\n * }\n *\n * const initialState: ProductsState = {\n *   products: [],\n *   selectedId: null,\n * };\n *\n * // AppState is passed as a generic argument\n * const productsFeature = createFeature<AppState>({\n *   name: 'products',\n *   reducer: createReducer(\n *     initialState,\n *     on(ProductsApiActions.loadSuccess(state, { products }) => ({\n *       ...state,\n *       products,\n *     }),\n *   ),\n * });\n *\n * const {\n *   selectProductsState, // type: MemoizedSelector<AppState, ProductsState>\n *   selectProducts, // type: MemoizedSelector<AppState, Product[]>\n *   selectSelectedId, // type: MemoizedSelector<AppState, string | null>\n * } = productsFeature;\n * ```\n *\n * **Without Application State**\n *\n * ```ts\n * const productsFeature = createFeature({\n *   name: 'products',\n *   reducer: createReducer(initialState),\n * });\n *\n * const {\n *   selectProductsState, // type: MemoizedSelector<Record<string, any>, ProductsState>\n *   selectProducts, // type: MemoizedSelector<Record<string, any>, Product[]>\n *   selectSelectedId, // type: MemoizedSelector<Record<string, any, string | null>\n * } = productsFeature;\n * ```\n */\nfunction createFeature(featureConfig) {\n    const { name, reducer } = featureConfig;\n    const featureSelector = createFeatureSelector(name);\n    const nestedSelectors = createNestedSelectors(featureSelector, reducer);\n    return Object.assign({ name,\n        reducer, [`select${capitalize(name)}State`]: featureSelector }, nestedSelectors);\n}\nfunction createNestedSelectors(featureSelector, reducer) {\n    const initialState = getInitialState(reducer);\n    const nestedKeys = (isPlainObject(initialState)\n        ? Object.keys(initialState)\n        : []);\n    return nestedKeys.reduce((nestedSelectors, nestedKey) => (Object.assign(Object.assign({}, nestedSelectors), { [`select${capitalize(nestedKey)}`]: createSelector(featureSelector, (parentState) => parentState === null || parentState === void 0 ? void 0 : parentState[nestedKey]) })), {});\n}\nfunction getInitialState(reducer) {\n    return reducer(undefined, { type: '@ngrx/feature/init' });\n}\n\nfunction immutabilityCheckMetaReducer(reducer, checks) {\n    return function (state, action) {\n        const act = checks.action(action) ? freeze(action) : action;\n        const nextState = reducer(state, act);\n        return checks.state() ? freeze(nextState) : nextState;\n    };\n}\nfunction freeze(target) {\n    Object.freeze(target);\n    const targetIsFunction = isFunction(target);\n    Object.getOwnPropertyNames(target).forEach((prop) => {\n        // Ignore Ivy properties, ref: https://github.com/ngrx/platform/issues/2109#issuecomment-582689060\n        if (prop.startsWith('ɵ')) {\n            return;\n        }\n        if (hasOwnProperty(target, prop) &&\n            (targetIsFunction\n                ? prop !== 'caller' && prop !== 'callee' && prop !== 'arguments'\n                : true)) {\n            const propValue = target[prop];\n            if ((isObjectLike(propValue) || isFunction(propValue)) &&\n                !Object.isFrozen(propValue)) {\n                freeze(propValue);\n            }\n        }\n    });\n    return target;\n}\n\nfunction serializationCheckMetaReducer(reducer, checks) {\n    return function (state, action) {\n        if (checks.action(action)) {\n            const unserializableAction = getUnserializable(action);\n            throwIfUnserializable(unserializableAction, 'action');\n        }\n        const nextState = reducer(state, action);\n        if (checks.state()) {\n            const unserializableState = getUnserializable(nextState);\n            throwIfUnserializable(unserializableState, 'state');\n        }\n        return nextState;\n    };\n}\nfunction getUnserializable(target, path = []) {\n    // Guard against undefined and null, e.g. a reducer that returns undefined\n    if ((isUndefined(target) || isNull(target)) && path.length === 0) {\n        return {\n            path: ['root'],\n            value: target,\n        };\n    }\n    const keys = Object.keys(target);\n    return keys.reduce((result, key) => {\n        if (result) {\n            return result;\n        }\n        const value = target[key];\n        // Ignore Ivy components\n        if (isComponent(value)) {\n            return result;\n        }\n        if (isUndefined(value) ||\n            isNull(value) ||\n            isNumber(value) ||\n            isBoolean(value) ||\n            isString(value) ||\n            isArray(value)) {\n            return false;\n        }\n        if (isPlainObject(value)) {\n            return getUnserializable(value, [...path, key]);\n        }\n        return {\n            path: [...path, key],\n            value,\n        };\n    }, false);\n}\nfunction throwIfUnserializable(unserializable, context) {\n    if (unserializable === false) {\n        return;\n    }\n    const unserializablePath = unserializable.path.join('.');\n    const error = new Error(`Detected unserializable ${context} at \"${unserializablePath}\". ${RUNTIME_CHECK_URL}#strict${context}serializability`);\n    error.value = unserializable.value;\n    error.unserializablePath = unserializablePath;\n    throw error;\n}\n\nfunction inNgZoneAssertMetaReducer(reducer, checks) {\n    return function (state, action) {\n        if (checks.action(action) && !i0.NgZone.isInAngularZone()) {\n            throw new Error(`Action '${action.type}' running outside NgZone. ${RUNTIME_CHECK_URL}#strictactionwithinngzone`);\n        }\n        return reducer(state, action);\n    };\n}\n\nfunction createActiveRuntimeChecks(runtimeChecks) {\n    if (isDevMode()) {\n        return Object.assign({ strictStateSerializability: false, strictActionSerializability: false, strictStateImmutability: true, strictActionImmutability: true, strictActionWithinNgZone: false, strictActionTypeUniqueness: false }, runtimeChecks);\n    }\n    return {\n        strictStateSerializability: false,\n        strictActionSerializability: false,\n        strictStateImmutability: false,\n        strictActionImmutability: false,\n        strictActionWithinNgZone: false,\n        strictActionTypeUniqueness: false,\n    };\n}\nfunction createSerializationCheckMetaReducer({ strictActionSerializability, strictStateSerializability, }) {\n    return (reducer) => strictActionSerializability || strictStateSerializability\n        ? serializationCheckMetaReducer(reducer, {\n            action: (action) => strictActionSerializability && !ignoreNgrxAction(action),\n            state: () => strictStateSerializability,\n        })\n        : reducer;\n}\nfunction createImmutabilityCheckMetaReducer({ strictActionImmutability, strictStateImmutability, }) {\n    return (reducer) => strictActionImmutability || strictStateImmutability\n        ? immutabilityCheckMetaReducer(reducer, {\n            action: (action) => strictActionImmutability && !ignoreNgrxAction(action),\n            state: () => strictStateImmutability,\n        })\n        : reducer;\n}\nfunction ignoreNgrxAction(action) {\n    return action.type.startsWith('@ngrx');\n}\nfunction createInNgZoneCheckMetaReducer({ strictActionWithinNgZone, }) {\n    return (reducer) => strictActionWithinNgZone\n        ? inNgZoneAssertMetaReducer(reducer, {\n            action: (action) => strictActionWithinNgZone && !ignoreNgrxAction(action),\n        })\n        : reducer;\n}\nfunction provideRuntimeChecks(runtimeChecks) {\n    return [\n        {\n            provide: _USER_RUNTIME_CHECKS,\n            useValue: runtimeChecks,\n        },\n        {\n            provide: USER_RUNTIME_CHECKS,\n            useFactory: _runtimeChecksFactory,\n            deps: [_USER_RUNTIME_CHECKS],\n        },\n        {\n            provide: ACTIVE_RUNTIME_CHECKS,\n            deps: [USER_RUNTIME_CHECKS],\n            useFactory: createActiveRuntimeChecks,\n        },\n        {\n            provide: META_REDUCERS,\n            multi: true,\n            deps: [ACTIVE_RUNTIME_CHECKS],\n            useFactory: createImmutabilityCheckMetaReducer,\n        },\n        {\n            provide: META_REDUCERS,\n            multi: true,\n            deps: [ACTIVE_RUNTIME_CHECKS],\n            useFactory: createSerializationCheckMetaReducer,\n        },\n        {\n            provide: META_REDUCERS,\n            multi: true,\n            deps: [ACTIVE_RUNTIME_CHECKS],\n            useFactory: createInNgZoneCheckMetaReducer,\n        },\n    ];\n}\nfunction checkForActionTypeUniqueness() {\n    return [\n        {\n            provide: _ACTION_TYPE_UNIQUENESS_CHECK,\n            multi: true,\n            deps: [ACTIVE_RUNTIME_CHECKS],\n            useFactory: _actionTypeUniquenessCheck,\n        },\n    ];\n}\nfunction _runtimeChecksFactory(runtimeChecks) {\n    return runtimeChecks;\n}\nfunction _actionTypeUniquenessCheck(config) {\n    if (!config.strictActionTypeUniqueness) {\n        return;\n    }\n    const duplicates = Object.entries(REGISTERED_ACTION_TYPES)\n        .filter(([, registrations]) => registrations > 1)\n        .map(([type]) => type);\n    if (duplicates.length) {\n        throw new Error(`Action types are registered more than once, ${duplicates\n            .map((type) => `\"${type}\"`)\n            .join(', ')}. ${RUNTIME_CHECK_URL}#strictactiontypeuniqueness`);\n    }\n}\n\nclass StoreRootModule {\n    constructor(actions$, reducer$, scannedActions$, store, guard, actionCheck) { }\n}\n/** @nocollapse */ /** @nocollapse */ StoreRootModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: StoreRootModule, deps: [{ token: ActionsSubject }, { token: ReducerObservable }, { token: ScannedActionsSubject }, { token: Store }, { token: _ROOT_STORE_GUARD, optional: true }, { token: _ACTION_TYPE_UNIQUENESS_CHECK, optional: true }], target: i0.ɵɵFactoryTarget.NgModule });\n/** @nocollapse */ /** @nocollapse */ StoreRootModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: StoreRootModule });\n/** @nocollapse */ /** @nocollapse */ StoreRootModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: StoreRootModule });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: StoreRootModule, decorators: [{\n            type: NgModule,\n            args: [{}]\n        }], ctorParameters: function () {\n        return [{ type: ActionsSubject }, { type: ReducerObservable }, { type: ScannedActionsSubject }, { type: Store }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [_ROOT_STORE_GUARD]\n                    }] }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [_ACTION_TYPE_UNIQUENESS_CHECK]\n                    }] }];\n    } });\nclass StoreFeatureModule {\n    constructor(features, featureReducers, reducerManager, root, actionCheck) {\n        this.features = features;\n        this.featureReducers = featureReducers;\n        this.reducerManager = reducerManager;\n        const feats = features.map((feature, index) => {\n            const featureReducerCollection = featureReducers.shift();\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            const reducers = featureReducerCollection /*TODO(#823)*/[index];\n            return Object.assign(Object.assign({}, feature), { reducers, initialState: _initialStateFactory(feature.initialState) });\n        });\n        reducerManager.addFeatures(feats);\n    }\n    // eslint-disable-next-line @angular-eslint/contextual-lifecycle\n    ngOnDestroy() {\n        this.reducerManager.removeFeatures(this.features);\n    }\n}\n/** @nocollapse */ /** @nocollapse */ StoreFeatureModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: StoreFeatureModule, deps: [{ token: _STORE_FEATURES }, { token: FEATURE_REDUCERS }, { token: ReducerManager }, { token: StoreRootModule }, { token: _ACTION_TYPE_UNIQUENESS_CHECK, optional: true }], target: i0.ɵɵFactoryTarget.NgModule });\n/** @nocollapse */ /** @nocollapse */ StoreFeatureModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: StoreFeatureModule });\n/** @nocollapse */ /** @nocollapse */ StoreFeatureModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: StoreFeatureModule });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: StoreFeatureModule, decorators: [{\n            type: NgModule,\n            args: [{}]\n        }], ctorParameters: function () {\n        return [{ type: undefined, decorators: [{\n                        type: Inject,\n                        args: [_STORE_FEATURES]\n                    }] }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [FEATURE_REDUCERS]\n                    }] }, { type: ReducerManager }, { type: StoreRootModule }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [_ACTION_TYPE_UNIQUENESS_CHECK]\n                    }] }];\n    } });\nclass StoreModule {\n    static forRoot(reducers, config = {}) {\n        return {\n            ngModule: StoreRootModule,\n            providers: [\n                {\n                    provide: _ROOT_STORE_GUARD,\n                    useFactory: _provideForRootGuard,\n                    deps: [[Store, new Optional(), new SkipSelf()]],\n                },\n                { provide: _INITIAL_STATE, useValue: config.initialState },\n                {\n                    provide: INITIAL_STATE,\n                    useFactory: _initialStateFactory,\n                    deps: [_INITIAL_STATE],\n                },\n                { provide: _INITIAL_REDUCERS, useValue: reducers },\n                {\n                    provide: _STORE_REDUCERS,\n                    useExisting: reducers instanceof InjectionToken ? reducers : _INITIAL_REDUCERS,\n                },\n                {\n                    provide: INITIAL_REDUCERS,\n                    deps: [Injector, _INITIAL_REDUCERS, [new Inject(_STORE_REDUCERS)]],\n                    useFactory: _createStoreReducers,\n                },\n                {\n                    provide: USER_PROVIDED_META_REDUCERS,\n                    useValue: config.metaReducers ? config.metaReducers : [],\n                },\n                {\n                    provide: _RESOLVED_META_REDUCERS,\n                    deps: [META_REDUCERS, USER_PROVIDED_META_REDUCERS],\n                    useFactory: _concatMetaReducers,\n                },\n                {\n                    provide: _REDUCER_FACTORY,\n                    useValue: config.reducerFactory\n                        ? config.reducerFactory\n                        : combineReducers,\n                },\n                {\n                    provide: REDUCER_FACTORY,\n                    deps: [_REDUCER_FACTORY, _RESOLVED_META_REDUCERS],\n                    useFactory: createReducerFactory,\n                },\n                ACTIONS_SUBJECT_PROVIDERS,\n                REDUCER_MANAGER_PROVIDERS,\n                SCANNED_ACTIONS_SUBJECT_PROVIDERS,\n                STATE_PROVIDERS,\n                STORE_PROVIDERS,\n                provideRuntimeChecks(config.runtimeChecks),\n                checkForActionTypeUniqueness(),\n            ],\n        };\n    }\n    static forFeature(featureNameOrSlice, reducers, config = {}) {\n        return {\n            ngModule: StoreFeatureModule,\n            providers: [\n                {\n                    provide: _FEATURE_CONFIGS,\n                    multi: true,\n                    useValue: featureNameOrSlice instanceof Object ? {} : config,\n                },\n                {\n                    provide: STORE_FEATURES,\n                    multi: true,\n                    useValue: {\n                        key: featureNameOrSlice instanceof Object\n                            ? featureNameOrSlice.name\n                            : featureNameOrSlice,\n                        reducerFactory: !(config instanceof InjectionToken) && config.reducerFactory\n                            ? config.reducerFactory\n                            : combineReducers,\n                        metaReducers: !(config instanceof InjectionToken) && config.metaReducers\n                            ? config.metaReducers\n                            : [],\n                        initialState: !(config instanceof InjectionToken) && config.initialState\n                            ? config.initialState\n                            : undefined,\n                    },\n                },\n                {\n                    provide: _STORE_FEATURES,\n                    deps: [Injector, _FEATURE_CONFIGS, STORE_FEATURES],\n                    useFactory: _createFeatureStore,\n                },\n                {\n                    provide: _FEATURE_REDUCERS,\n                    multi: true,\n                    useValue: featureNameOrSlice instanceof Object\n                        ? featureNameOrSlice.reducer\n                        : reducers,\n                },\n                {\n                    provide: _FEATURE_REDUCERS_TOKEN,\n                    multi: true,\n                    useExisting: reducers instanceof InjectionToken ? reducers : _FEATURE_REDUCERS,\n                },\n                {\n                    provide: FEATURE_REDUCERS,\n                    multi: true,\n                    deps: [\n                        Injector,\n                        _FEATURE_REDUCERS,\n                        [new Inject(_FEATURE_REDUCERS_TOKEN)],\n                    ],\n                    useFactory: _createFeatureReducers,\n                },\n                checkForActionTypeUniqueness(),\n            ],\n        };\n    }\n}\n/** @nocollapse */ /** @nocollapse */ StoreModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: StoreModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n/** @nocollapse */ /** @nocollapse */ StoreModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: StoreModule });\n/** @nocollapse */ /** @nocollapse */ StoreModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: StoreModule });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: StoreModule, decorators: [{\n            type: NgModule,\n            args: [{}]\n        }] });\nfunction _createStoreReducers(injector, reducers) {\n    return reducers instanceof InjectionToken ? injector.get(reducers) : reducers;\n}\nfunction _createFeatureStore(injector, configs, featureStores) {\n    return featureStores.map((feat, index) => {\n        if (configs[index] instanceof InjectionToken) {\n            const conf = injector.get(configs[index]);\n            return {\n                key: feat.key,\n                reducerFactory: conf.reducerFactory\n                    ? conf.reducerFactory\n                    : combineReducers,\n                metaReducers: conf.metaReducers ? conf.metaReducers : [],\n                initialState: conf.initialState,\n            };\n        }\n        return feat;\n    });\n}\nfunction _createFeatureReducers(injector, reducerCollection) {\n    const reducers = reducerCollection.map((reducer) => {\n        return reducer instanceof InjectionToken ? injector.get(reducer) : reducer;\n    });\n    return reducers;\n}\nfunction _initialStateFactory(initialState) {\n    if (typeof initialState === 'function') {\n        return initialState();\n    }\n    return initialState;\n}\nfunction _concatMetaReducers(metaReducers, userProvidedMetaReducers) {\n    return metaReducers.concat(userProvidedMetaReducers);\n}\nfunction _provideForRootGuard(store) {\n    if (store) {\n        throw new TypeError(`StoreModule.forRoot() called twice. Feature modules should use StoreModule.forFeature() instead.`);\n    }\n    return 'guarded';\n}\n\n/**\n * @description\n * Associates actions with a given state change function.\n * A state change function must be provided as the last parameter.\n *\n * @param args `ActionCreator`'s followed by a state change function.\n *\n * @returns an association of action types with a state change function.\n *\n * @usageNotes\n * ```ts\n * on(AuthApiActions.loginSuccess, (state, { user }) => ({ ...state, user }))\n * ```\n */\nfunction on(...args) {\n    // This could be refactored when TS releases the version with this fix:\n    // https://github.com/microsoft/TypeScript/pull/41544\n    const reducer = args.pop();\n    const types = args.map((creator) => creator.type);\n    return { reducer, types };\n}\n/**\n * @description\n * Creates a reducer function to handle state transitions.\n *\n * Reducer creators reduce the explicitness of reducer functions with switch statements.\n *\n * @param initialState Provides a state value if the current state is `undefined`, as it is initially.\n * @param ons Associations between actions and state changes.\n * @returns A reducer function.\n *\n * @usageNotes\n *\n * - Must be used with `ActionCreator`'s (returned by `createAction`). Cannot be used with class-based action creators.\n * - The returned `ActionReducer` should additionally be wrapped with another function, if you are using View Engine AOT.\n * In case you are using Ivy (or only JIT View Engine) the extra wrapper function is not required.\n *\n * **Declaring a reducer creator**\n *\n * ```ts\n * export const reducer = createReducer(\n *   initialState,\n *   on(\n *     featureActions.actionOne,\n *     featureActions.actionTwo,\n *     (state, { updatedValue }) => ({ ...state, prop: updatedValue })\n *   ),\n *   on(featureActions.actionThree, () => initialState);\n * );\n * ```\n *\n * **Declaring a reducer creator using a wrapper function (Only needed if using View Engine AOT)**\n *\n * ```ts\n * const featureReducer = createReducer(\n *   initialState,\n *   on(\n *     featureActions.actionOne,\n *     featureActions.actionTwo,\n *     (state, { updatedValue }) => ({ ...state, prop: updatedValue })\n *   ),\n *   on(featureActions.actionThree, () => initialState);\n * );\n *\n * export function reducer(state: State | undefined, action: Action) {\n *   return featureReducer(state, action);\n * }\n * ```\n */\nfunction createReducer(initialState, ...ons) {\n    const map = new Map();\n    for (const on of ons) {\n        for (const type of on.types) {\n            const existingReducer = map.get(type);\n            if (existingReducer) {\n                const newReducer = (state, action) => on.reducer(existingReducer(state, action), action);\n                map.set(type, newReducer);\n            }\n            else {\n                map.set(type, on.reducer);\n            }\n        }\n    }\n    return function (state = initialState, action) {\n        const reducer = map.get(action.type);\n        return reducer ? reducer(state, action) : state;\n    };\n}\n\n/**\n * DO NOT EDIT\n *\n * This file is automatically generated at build\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { ACTIVE_RUNTIME_CHECKS, ActionsSubject, FEATURE_REDUCERS, INIT, INITIAL_REDUCERS, INITIAL_STATE, META_REDUCERS, REDUCER_FACTORY, ReducerManager, ReducerManagerDispatcher, ReducerObservable, STORE_FEATURES, ScannedActionsSubject, State, StateObservable, Store, StoreFeatureModule, StoreModule, StoreRootModule, UPDATE, USER_PROVIDED_META_REDUCERS, USER_RUNTIME_CHECKS, combineReducers, compose, createAction, createActionGroup, createFeature, createFeatureSelector, createReducer, createReducerFactory, createSelector, createSelectorFactory, defaultMemoize, defaultStateFn, emptyProps, isNgrxMockEnvironment, on, props, reduceState, resultMemoize, select, setNgrxMockEnvironment, union };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}